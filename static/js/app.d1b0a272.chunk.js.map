{"version":3,"sources":["assets/no-user.png","src/components/buttons/button.tsx","src/components/modals/dialog.tsx","src/contexts/auth.provider.tsx","src/components/inputs/input-styles.ts","src/components/inputs/fullname-input.tsx","src/components/inputs/password-input.tsx","src/components/portrait/portrait.tsx","src/components/buttons/command-link.tsx","src/components/modals/user-settings.tsx","src/components/headers/header.tsx","src/components/buttons/navigation-button.tsx","src/components/dividers/divider.tsx","src/components/containers/home-container.tsx","src/components/inputs/text-input.tsx","src/components/pickers/picker.tsx","src/components/modals/discount-styles.ts","src/components/modals/discount.tsx","src/components/lists/logs-item.tsx","src/components/lists/logs.tsx","src/pages/Home/index.tsx","src/components/inputs/masked-input.tsx","src/components/modals/apply-discount.tsx","src/components/dropdowns/dropdown-styles.ts","src/components/lists/discount/payment-method-item.tsx","src/components/dropdowns/discount/payment-method-dropdown.tsx","src/components/lists/discount/items-item.tsx","src/components/dropdowns/discount/items-dropdown.tsx","src/pages/Discount/index.tsx","src/components/buttons/swipe-button.tsx","src/pages/Discount/Confirmation/index.tsx","src/routes/app.routes.tsx","src/components/inputs/email-input.tsx","src/pages/PasswordRecovery/index.tsx","src/pages/SignIn/index.tsx","src/pages/SignUp/index.tsx","src/routes/auth.routes.tsx","src/routes/index.tsx","App.tsx","assets/adaptive-icon.png","src/services/firebase.service.ts"],"names":["module","exports","Button","properties","useState","opacity","setOpacity","useEffect","disabled","TouchableOpacity","style","styles","button","Text","text","title","StyleSheet","create","width","backgroundColor","alignItems","justifyContent","paddingVertical","paddingHorizontal","borderRadius","elevation","marginTop","fontSize","fontWeight","letterSpacing","color","Dialog","Modal","visible","transparent","animationType","View","DialogStyles","container","field","content","onPress","dismiss","flex","marginHorizontal","padding","marginVertical","textAlign","defaultState","user","undefined","company","department","loading","signUp","signIn","signOut","recoverPassword","userUpdate","AuthContext","createContext","AuthProvider","children","setUser","setCompany","setDepartment","setLoading","dialog","setDialog","setVisible","firebaseAuth","onAuthStateChanged","currentUser","emailVerified","_getUserRegister","uid","Alert","_email","_password","_fullName","_portrait","createUserWithEmailAndPassword","then","result","validate","languageCode","sendEmailVerification","catch","error","message","_portraitURL","_uploadImage","_user","email","fullName","verified","branches","id","name","logs","date","description","type","portrait","_userRegister","code","signInWithEmailAndPassword","AsyncStorage","clear","sendPasswordResetEmail","_currentPassword","_newPassword","realtime","ref","child","update","_storeUser","_userUpdatePassword","_reauthenticate","currentPassword","credentials","firebase","auth","EmailAuthProvider","credential","reauthenticateWithCredential","updatePassword","_alertPasswordChange","Promise","resolve","_uid","response","fetch","blob","filename","urlImage","storage","put","snapshot","getDownloadURL","console","log","set","_user_","once","val","jsonUser","JSON","stringify","setItem","_storeCompany","_storeDepartment","_company","_department","contextValue","useMemo","Provider","value","InputStyles","input","height","marginBottom","FullNameInput","TextInput","placeholder","placeholderTextColor","PasswordInput","textContentType","secureTextEntry","autoCapitalize","Portrait","Image","source","require","uri","image","alignSelf","CommandLink","Pressable","UserSettings","authContext","useContext","FULLNAME","PORTRAIT","setFullName","setCurrentPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","setPortrait","changePassword","setChangePassword","setDisabled","length","pickImage","ImagePicker","mediaTypes","Images","allowsEditing","aspect","quality","canceled","assets","handleUpdateUser","handleCancel","onChangeText","maxLength","onPressIn","onPressOut","Header","navigation","useNavigation","handleSignOut","header","returnOption","containerReturn","testID","size","navigate","marginLeft","descriptions","flexDirection","paddingLeft","borderColor","borderWidth","marginRight","NavigationButton","area","icon","textAlignVertical","Divider","divider","borderBottomWidth","HomeContainer","borderTopLeftRadius","borderTopRightRadius","Picker","picker","textStyle","font","labelStyle","DiscountStyles","position","zIndex","DiscountModal","budget","setBudget","branch","setBranch","setBranches","translation","useRef","Animated","Value","current","open","setOpen","data","array","Object","entries","forEach","label","Keyboard","onShow","timing","toValue","duration","useNativeDriver","start","setValue","absoluteFillObject","transform","translateY","keyboardType","items","LogsItem","setName","sub","Logs","FlatList","renderItem","item","Home","containerTitle","containerChild","discount","setDiscount","ScrollView","horizontal","showsHorizontalScrollIndicator","menu","StatusBar","translucent","MaskedInput","includeRawValueInChangeText","ApplyDiscountModal","percentage","setPercentage","reset","maskedText","rawText","options","precision","separator","delimiter","unit","suffixUnit","DropdownStyles","borderTopStartRadius","borderTopEndRadius","subText","PaymentMethodItem","installments","installment","method","PaymentMethodDropdown","setData","ItemsItem","imageUrl","maxWidth","maxHeight","stock","total","ItemsDropdown","Discount","topField","headerText","paddingBottom","subTitle","box","bottomField","paddingTop","SwipeButton","Icon","onComplete","titleStyle","underlayTitle","underlayTitleStyle","underlayStyle","containerStyle","circleBackgroundColor","circleSize","iconContainerStyle","DiscountConfirmation","contentContainerStyle","scrollEnabled","client","AppRoutes","Stack","createStackNavigator","Navigator","screenOptions","headerShown","Screen","component","EmailInput","maxFontSizeMultiplier","PasswordRecovery","setEmail","defaultDialog","SignIn","password","setPassword","SignUp","alert","AuthRoutes","headerTransparent","Routes","SafeAreaView","ActivityIndicator","App","NavigationContainer","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","databaseURL","fireApp","initializeApp","initializeAuth","persistence","getReactNativePersistence","firestore","database"],"mappings":"yEAAAA,EAAOC,QAAU,IAA0B,qC,izBCQpC,SAASC,EAAOC,GACnB,MAA8BC,mBAAS,GAAE,WAAlCC,EAAO,KAAEC,EAAU,KAQ1B,OAPAC,qBAAU,WACFJ,EAAWK,SACXF,EAAW,IAEXA,EAAW,KAEhB,CAACH,EAAWK,WAEX,cAACC,EAAA,QAAgB,OAAKN,GAAU,IAAEO,MAAO,CAACC,EAAOC,OAAQ,CAAEP,QAASA,IAAYG,SAAUL,EAAWK,SAAS,SAC1G,cAACK,EAAA,QAAI,CAACH,MAAOC,EAAOG,KAAK,SAAEX,EAAWY,WAKlD,IAAMJ,EAASK,UAAWC,OAAO,CAC7BL,OAAQ,CACJM,MAAO,OACPC,gBAAiB,UACjBC,WAAY,SACZC,eAAgB,SAChBC,gBAAiB,GACjBC,kBAAmB,GACnBC,aAAc,GACdC,UAAW,EACXC,UAAW,IAEfZ,KAAM,CACFa,SAAU,GACVC,WAAY,OACZC,cAAe,IACfC,MAAO,W,ikBC9BR,SAASC,EAAO5B,GACnB,OACI,cAAC6B,EAAA,QAAK,OAAK7B,GAAU,IACjB8B,QAAS9B,EAAW8B,QACpBC,aAAa,EACbC,cAAc,OAAM,SACpB,cAACC,EAAA,QAAI,CAAC1B,MAAO2B,EAAaC,UAAU,SAChC,eAACF,EAAA,QAAI,CAAC1B,MAAO2B,EAAaE,MAAM,UAC5B,cAAC1B,EAAA,QAAI,CAACH,MAAO2B,EAAatB,MAAM,SAAEZ,EAAWY,QAC7C,cAACF,EAAA,QAAI,CAACH,MAAO2B,EAAaG,QAAQ,SAAErC,EAAWqC,UAC/C,cAACtC,EAAM,CAACuC,QAAStC,EAAWuC,QAAS3B,MAAM,sBAOxD,IAAMsB,EAAerB,UAAWC,OAAO,CAC1CqB,UAAW,CACPK,KAAM,EACNtB,eAAgB,SAChBF,gBAAiB,sBAErBoB,MAAO,CACHK,iBAAkB,KAClBzB,gBAAiB,UACjBK,aAAc,GACdqB,QAAS,MAEb9B,MAAO,CACH+B,eAAgB,EAChBnB,SAAU,GACVC,WAAY,QAEhBY,QAAS,CACLM,eAAgB,EAChBvB,kBAAmB,KACnBI,SAAU,GACVoB,UAAW,aCnBbC,EAAe,CACnBC,UAAMC,EACNC,aAASD,EACTE,gBAAYF,EACZG,SAAS,EACTC,OAAO,WAAD,WAAE,gBAAe,kDAAhB,GACPC,OAAO,WAAD,WAAE,gBAAe,kDAAhB,GACPC,QAAQ,WAAD,WAAE,gBAAe,kDAAhB,GACRC,gBAAgB,WAAD,WAAE,gBAAe,kDAAhB,GAChBC,WAAW,WAAD,WAAE,gBAAe,kDAAhB,IAGAC,EAAcC,wBAAgCZ,GAwW5Ca,EAlWM,SAAH,GAAyC,IAAnCC,EAAQ,EAARA,SACtB,EAAwB1D,qBAAgB,WAAjC6C,EAAI,KAAEc,EAAO,KACpB,EAA8B3D,mBAA6B,IAAG,WAAvD+C,EAAO,KAAEa,EAAU,KAC1B,EAAoC5D,mBAA6B,IAAG,WAA7DgD,EAAU,KAAEa,EAAa,KAChC,EAA8B7D,oBAAkB,GAAK,WAA9CiD,EAAO,KAAEa,EAAU,KAC1B,EAA4B9D,mBAAS,CAAEW,MAAO,GAAIyB,QAAS,KAAK,WAAzD2B,EAAM,KAAEC,EAAS,KACxB,EAA8BhE,oBAAS,GAAM,WAAtC6B,EAAO,KAAEoC,EAAU,KAE1B9D,qBAAU,WACR+D,eAAaC,mBAAmB,WAAD,WAAC,UAAOC,GACjCA,EACEA,EAAYC,cACTxB,UACGyB,EAAiBF,EAAYG,OAGrCC,EAAM,2BAAyB,qCAC/BpB,KAGFA,IAEFU,GAAW,MACV,OAAF,4CAd+B,MAe/B,IAEH,IAAMZ,EAAM,sBAAG,UACbuB,EACAC,EACAC,EACAC,GAEAd,GAAW,SACLI,eACHW,+BAA+BJ,EAAQC,GACvCI,KAAK,WAAD,WAAC,UAAOC,GACX,GAAmB,MAAfA,EAAOlC,KAAc,CACvB,IAAImC,GAAW,EASf,GARAd,eAAae,aAAe,KAC5BF,EAAOlC,KAAKqC,wBAAwBC,OAAM,SAACC,GACzCJ,GAAW,EACXR,EACE,OAAO,iDACoCY,EAAMC,YAGjDN,EAAOlC,MAAQmC,EAAU,CAC3B,IAAIM,QAAqBC,EAAaX,EAAWG,EAAOlC,KAAK0B,KACzDiB,EAAc,CAChBjB,IAAKQ,EAAOlC,KAAK0B,IACjBkB,MAAOhB,EACPiB,SAAUf,EACV5B,QAAS,GACTC,WAAY,GACZ2C,UAAU,EACVC,SAAU,CAAC,CACTC,GAAI,GACJC,KAAM,KAERC,KAAM,CAAC,CACLF,GAAI,GACJG,KAAM,GACNrF,MAAO,GACPsF,YAAa,GACbC,KAAM,KAERC,SAAUb,SAENc,EAAcZ,QAGzB,mDApCK,IAqCLL,OAAM,SAACC,GACa,uBAAfA,EAAMiB,KACR7B,EAAM,cAAe,iCACG,uBAAfY,EAAMiB,KACf7B,EAAM,qBAAmB,0CAEzBA,EAAM,OAAO,wBAAyBY,EAAMC,eAGnD,gBAvDW,4CAyDNlC,EAAM,sBAAG,UAAOsB,EAAgBC,GACpCZ,GAAW,SACLI,eACHoC,2BAA2B7B,EAAQC,GACnCS,OAAM,SAACC,GACFA,GACFZ,EACE,cACA,+DAGJV,GAAW,SAEhB,gBAbW,wCAeNV,EAAO,sBAAG,YACdU,GAAW,SACLI,eAAad,gBACbmD,UAAaC,QACnB7C,OAAQb,GACRc,EAAW,IACXC,EAAc,IACdC,GAAW,MACZ,kBARY,mCAUPT,EAAe,sBAAG,UAAOoB,SACvBP,eAAauC,uBAAuBhC,GAAQU,OAAM,SAACC,GACvDZ,EACE,OAAO,8EAC8DY,EAAMC,eAGhF,gBAPoB,sCASf/B,EAAU,sBAAG,UACjBqB,EACAC,EACA8B,EACAC,GAEA7C,GAAW,GACX,IAAIwB,EAAe,GAEjBA,EADEV,IAAiB,MAAJ/B,OAAI,EAAJA,EAAMsD,gBACAZ,EAAaX,EAAe,MAAJ/B,OAAI,EAAJA,EAAM0B,KAEhC,MAAJ1B,OAAI,EAAJA,EAAMsD,SAEvB,IAAIX,EAAQtB,eAAaE,kBACnBwC,WACHC,IAAI,SACJC,MAAMtB,EAAMjB,KACZwC,OAAO,CACNrB,SAAUf,EACVwB,SAAUb,IAEXR,MAAK,WACJ,IAAIU,EAAc,CAChBjB,IAAS,MAAJ1B,OAAI,EAAJA,EAAM0B,IACXmB,SAAUf,EACVc,MAAW,MAAJ5C,OAAI,EAAJA,EAAM4C,MACbU,SAAUb,EACVvC,QAAa,MAAJF,OAAI,EAAJA,EAAME,QACfC,WAAgB,MAAJH,OAAI,EAAJA,EAAMG,WAClB2C,SAAc,MAAJ9C,OAAI,EAAJA,EAAM8C,SAChBC,SAAc,MAAJ/C,OAAI,EAAJA,EAAM+C,SAChBG,KAAU,MAAJlD,OAAI,EAAJA,EAAMkD,MAEdiB,EAAWxB,MAEXkB,GAAoBC,UAChBM,EAAoBP,EAAkBC,IAE9C7C,GAAW,MACZ,gBAvCe,4CAyCVoD,EAAe,sBAAG,UAAOC,GAC7B,IAAMtE,EAAOqB,eAAaE,YACpBgD,EAAcC,UAASC,KAAKC,kBAAkBC,WAClD3E,EAAK4C,MACL0B,GAEF,aAAatE,EAAK4E,6BAA6BL,MAChD,gBAPoB,sCASfH,EAAmB,sBAAG,UAC1BP,EACAC,GAEID,GAAoBC,UAChBO,EAAgBR,GACnB5B,KAAK,iBAAa,IAAD,QACc,OAA9B,EAAMZ,eAAaE,kBAAW,EAAxB,EACFsD,eAAef,GAChB7B,KAAK,uBACE6C,QAEPxC,OAAM,SAACC,GACNZ,EAAM,OAAQY,EAAMC,gBAGzBF,OAAM,SAACC,GACNZ,EAAM,OAAQY,EAAMC,gBAG3B,gBApBwB,wCAsBnBsC,EAAoB,sBAAG,mBAC3B,IAAIC,SAAQ,SAACC,GACXrD,EACE,2BACA,oDAEFpB,UACA,kBAPsB,mCASpBoB,EAAQ,SAAC7D,EAAeyB,GAC5B4B,EAAU,CAAErD,MAAOA,EAAOyB,QAASA,IACnC6B,GAAW,IAGPsB,EAAY,sBAAG,UACnBX,EACAkD,GAEA,IAAMC,QAAiBC,MAAMpD,GACvBqD,QAAaF,EAASE,OACtBC,EAAWJ,EACbK,EAAW,GASf,aARMC,UACHvB,MACAC,MAAM,GAAGoB,GACTG,IAAIJ,GACJnD,KAAK,WAAD,WAAC,UAAOwD,GACXH,QAAiBG,EAASzB,IAAI0B,oBAC/B,mDAFK,IAGLpD,OAAM,SAACC,GAAK,OAAKoD,QAAQC,IAAIrD,MACzB+C,KACR,gBAjBiB,wCAmBZ/B,EAAa,sBAAG,UAAOZ,SACrBoB,WACHC,IAAI,SACJC,MAAMtB,EAAMjB,KACZmE,IAAI,CACHhD,SAAUF,EAAME,SAChBS,SAAUX,EAAMW,SAChBpD,QAASyC,EAAMzC,QACfC,WAAYwC,EAAMxC,WAClB2C,SAAUH,EAAMG,SAChBC,SAAUJ,EAAMI,SAChBG,KAAMP,EAAMO,OAEbjB,MAAK,WACJ,IAAI6D,EAAe,CACjBpE,IAAKiB,EAAMjB,IACXmB,SAAUF,EAAME,SAChBD,MAAOD,EAAMC,MACbU,SAAUX,EAAMW,SAChBpD,QAASyC,EAAMzC,QACfC,WAAYwC,EAAMxC,WAClB2C,SAAUH,EAAMG,SAChBC,SAAUJ,EAAMI,SAChBG,KAAMP,EAAMO,MAEdiB,EAAW2B,SAEhB,gBA3BkB,sCA6BbrE,EAAgB,sBAAG,UAAOwD,SACxBlB,WACHC,IAAI,SACJC,MAAMgB,GACNc,KAAK,SACL9D,KAAK,WAAD,WAAC,UAAOwD,GACX,IAAI9C,EAAc,CAChBjB,IAAKuD,EACLpC,SAAU4C,EAASO,MAAMnD,SACzBD,MAAO6C,EAASO,MAAMpD,MACtBU,SAAUmC,EAASO,MAAM1C,SACzBpD,QAASuF,EAASO,MAAM9F,QACxBC,WAAYsF,EAASO,MAAM7F,WAC3B2C,SAAU2C,EAASO,MAAMlD,SACzBC,SAAU0C,EAASxB,MAAM,YAAY+B,MACrC9C,KAAMuC,EAASxB,MAAM,QAAQ+B,OAE/B,IAAKrD,EAAMG,SAAU,CACnB,IAAIvB,QAAoBiD,UAASC,OAAOlD,YACzB,MAAXA,KAAaC,gBACfmB,EAAMG,UAAW,QACXS,EAAcZ,UAGlBwB,EAAWxB,MAChB,OAAF,4CApBK,OAqBT,gBA1BqB,sCA4BhBwB,EAAU,sBAAG,UAAOxB,GACxB,IAAIsD,EAAWC,KAAKC,UAAUxD,SACxBe,UAAa0C,QAAQ,OAAQH,GACnCnF,EAAQ6B,GACR0D,EAAc1D,EAAMzC,SACpBoG,EAAiB3D,EAAMxC,eACxB,gBANe,sCAQVkG,EAAa,sBAAG,UAAOE,GACX,IAAZA,UACIxC,WACHC,IAAI,aACJC,MAAMsC,GACNR,KAAK,SACL9D,KAAK,WAAD,WAAC,UAAOwD,SACL/B,UAAa0C,QAAQ,UAAWX,EAASO,MAAM/C,MAAMhB,MAAK,WAC9DlB,EAAW0E,EAASO,MAAM/C,YAE3B,OAAF,4CAJK,QAMX,gBAZkB,sCAcbqD,EAAgB,sBAAG,UAAOE,GACX,IAAfA,UACIzC,WACHC,IAAI,eACJC,MAAMuC,GACNT,KAAK,SACL9D,KAAK,WAAD,WAAC,UAAOwD,SACL/B,UAAa0C,QAAQ,aAAcX,EAASO,OAAO/D,MAAK,WAC5DjB,EAAcyE,EAASO,aAExB,OAAF,4CAJK,QAMX,gBAZqB,sCAchBS,EAAeC,mBAAQ,iBAAO,CAClC1G,OACAE,UACAC,aACAC,UACAC,SACAC,SACAC,UACAC,kBACAC,gBACE,CACFT,EACAE,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,IAGF,OACE,eAACC,EAAYiG,SAAQ,CACnBC,MAAOH,EAAa,UAEpB,cAAC3H,EAAM,CACLhB,MAAOoD,EAAOpD,MACdyB,QAAS2B,EAAO3B,QAChBP,QAASA,EACTS,QAAS,WACP2B,GAAW,MAGdP,M,2DC1YMgG,EAAc9I,UAAWC,OAAO,CACzC8I,MAAO,CACH7I,MAAO,OACP8I,OAAQ,GACR7I,gBAAiB,QACjBW,MAAO,UACPH,SAAU,GACVC,WAAY,OACZJ,aAAc,GACdD,kBAAmB,GACnB0I,aAAc,M,ikBCTf,SAASC,EAAc/J,GAC1B,OACI,cAACgK,EAAA,QAAS,OAAKhK,GAAU,IACrBiK,YAAY,gBACZC,qBAAqB,UACrB3J,MAAOC,EAAOoJ,S,ikBCFnB,SAASO,EAAcnK,GAC1B,OACI,cAACgK,EAAA,QAAS,OAAKhK,GAAU,IACrBoK,gBAAgB,WAChBC,iBAAe,EACfC,eAAe,OACfL,YAAajK,EAAWiK,YAAcjK,EAAWiK,YAAc,QAC/DC,qBAAqB,UACrB3J,MAAOC,EAAOoJ,SCNnB,SAASW,EAASvK,GACrB,OACI,eAACiC,EAAA,QAAI,CAAC1B,MAAOC,EAAO2B,UAAU,UAC1B,cAACqI,EAAA,QAAK,CACFC,OACyB,IAArBzK,EAAWyK,OACPC,EAAQ,KAAiC,CAAEC,IAAK3K,EAAWyK,QAEnElK,MAAOC,EAAOoK,QAClB,cAAC7K,EAAM,CAACa,MAAM,aAAa0B,QAAStC,EAAWsC,aAK3D,IAAM9B,EAASK,UAAWC,OAAO,CAC7BqB,UAAW,CACPpB,MAAO,IACPE,WAAY,SACZC,eAAgB,SAChB2J,UAAW,SACXlI,eAAgB,IAEpBiI,MAAO,CACH7J,MAAO,IACP8I,OAAQ,IACRxI,aAAc,GACdyI,aAAc,K,klBC5Bf,SAASgB,EAAY9K,GACxB,OACI,cAAC+K,EAAA,QAAS,OAAK/K,GAAU,aACrB,cAACU,EAAA,QAAI,CAACH,MAAOC,GAAOG,KAAK,SAAEX,EAAWY,WAKlD,IAAMJ,GAASK,UAAWC,OAAO,CAC7BH,KAAM,CACFI,MAAO,OACP8I,OAAQ,GACRrI,SAAU,GACVC,WAAY,OACZC,cAAe,IACfC,MAAO,UACPiB,UAAW,SACXkH,aAAc,M,qkBCPf,SAASkB,GAAahL,GAAyB,IAAD,IAC7CiL,EAAcC,qBAAW1H,GACzB2H,EAA2B,OAAnB,EAAGF,EAAYnI,WAAI,EAAhB,EAAkB6C,SAC7ByF,EAA2B,OAAnB,EAAGH,EAAYnI,WAAI,EAAhB,EAAkBsD,SACnC,EAAgCnG,mBAA6BkL,GAAS,WAA/DxF,EAAQ,KAAE0F,EAAW,KAC5B,EAA8CpL,mBAAS,IAAG,WAAnDmH,EAAe,KAAEkE,EAAkB,KAC1C,EAAsCrL,mBAAS,IAAG,WAA3CsL,EAAW,KAAEC,EAAc,KAClC,EAA8CvL,mBAAS,IAAG,WAAnDwL,EAAe,KAAEC,EAAkB,KAC1C,EAAgCzL,mBAA6BmL,GAAS,WAA/DhF,EAAQ,KAAEuF,EAAW,KAC5B,EAA4C1L,qBAA+B,WAApE2L,EAAc,KAAEC,EAAiB,KACxC,EAAgC5L,oBAAS,GAAM,WAAxCI,EAAQ,KAAEyL,EAAW,KAC5B,EAA4B7L,mBAAS,CAAEW,MAAO,GAAIyB,QAAS,KAAK,WAAzD2B,EAAM,KAAEC,EAAS,KACxB,GAA8BhE,oBAAS,GAAM,aAAtC6B,GAAO,MAAEoC,GAAU,MAE1B9D,qBAAU,WACRiL,EAAYF,GACZQ,EAAYP,KACX,IAEHhL,qBAAU,WACHwL,GAEDE,EADE1F,GAAYgF,GAAYzF,GAAYwF,KAMzC,CAAC/E,EAAUT,IAEdvF,qBAAU,WACJwL,IAEAxE,EAAgB2E,OAAS,GACzBR,EAAYQ,OAAS,GACrBN,EAAgBM,OAAS,EAErBR,GAAeE,GACjBK,GAAY,GAGdA,GAAY,MAGf,CAACL,IAEJ,IAAMO,GAAS,sBAAG,YAChB,IAAIhH,QAAeiH,0BAAoC,CACrDC,WAAYD,mBAA6BE,OACzCC,eAAe,EACfC,OAAQ,CAAC,EAAG,GACZC,QAAS,KAENtH,EAAOuH,UACVZ,EAAY3G,EAAOwH,OAAO,GAAG7B,QAEhC,kBAVc,mCAYT8B,GAAgB,sBAAG,YACP,IAAZ9G,EACFlB,GAAM,uBAAqB,8CAErBwG,EAAY1H,WAChBoC,EACAS,EACAgB,EACAmE,GAGJmB,QACD,kBAZqB,mCAmBhBA,GAAe,WACnBb,OAAkB9I,GAClB+I,GAAY,GACZR,EAAmB,IACnBE,EAAe,IACfE,EAAmB,IACnBL,EAAYF,GACZQ,EAAYP,IAGR3G,GAAQ,SAAC7D,EAAeyB,GAC5B4B,EAAU,CAAErD,MAAOA,EAAOyB,QAASA,IACnC6B,IAAW,IAGb,OACE,eAACrC,EAAA,QAAK,SACA7B,GAAU,IACd8B,QAAS9B,EAAW8B,QACpBC,aAAa,EACbC,cAAc,OAAM,UAEpB,cAACC,EAAA,QAAI,CAAC1B,MAAOC,EAAO2B,UAAU,SAC5B,eAACF,EAAA,QAAI,CAAC1B,MAAOC,EAAO4B,MAAM,UACxB,cAACmI,EAAQ,CAACE,OAAQrE,EAAU9D,QAAS0J,KACrC,cAACjC,EAAa,CACZL,MAAO/D,EACPgH,aAActB,EACduB,UAAW,MAEXhB,GACA,cAACd,EAAW,CAACxI,QApCM,WAC3BwJ,GAAY,GACZD,GAAkB,IAkCkCjL,MAAM,kBAEnDgL,GACC,eAAC3J,EAAA,QAAI,WACH,cAACkI,EAAa,CACZT,MAAOtC,EACPuF,aAAcrB,EACdrB,YAAY,gBAEd,cAACE,EAAa,CACZT,MAAO6B,EACPoB,aAAcnB,EACdvB,YAAY,eAEd,cAACE,EAAa,CACZT,MAAO+B,EACPkB,aAAcjB,EACdzB,YAAY,4BAIlB,cAAClK,EAAM,CACL8M,UAAWH,GACXI,WAAY9M,EAAWuC,QACvB3B,MAAM,aAER,cAACb,EAAM,CACLM,SAAUA,EACVwM,UAAWJ,GACXK,WAAY9M,EAAWuC,QACvB3B,MAAM,mBAIXkB,IACC,cAACF,EAAM,CACLhB,MAAOoD,EAAOpD,MACdyB,QAAS2B,EAAO3B,QAChBP,QAASA,GACTS,QAAS,WACP2B,IAAW,U,aCvJhB,SAAS6I,GAAO/M,GAAyB,IAAD,MACvCiL,EAAcC,qBAAW1H,GACzBwJ,EAAaC,2BACnB,EAA8BhN,oBAAS,GAAM,WAAtC6B,EAAO,KAAEoC,EAAU,KAEpBgJ,EAAa,sBAAG,YACpBjC,EAAY5H,aACb,kBAFkB,mCAQnB,OACE,eAACpB,EAAA,QAAI,CAAC1B,MAAOC,GAAO2M,OAAO,UACzB,cAACpC,EAAA,QAAS,CAACzI,QANC,WACd4B,GAAW,IAKmB,SAC1B,eAACjC,EAAA,QAAI,CACH1B,OAC8B,IAA5BP,EAAWoN,aACP5M,GAAO2B,UACP3B,GAAO6M,gBACZ,UAEArN,EAAWoN,cACV,cAAC,UAAI,CACHE,OAAO,OACPvH,KAAK,sBACLwH,KAAM,GACN5L,MAAM,QACNW,QAAS,WACP0K,EAAWQ,SAAS,SAEtBjN,MAAO,CAAEkN,YAAa,MAG1B,cAACjD,EAAA,QAAK,CACJC,OACkB,OAAhB,EAAAQ,EAAYnI,OAAZ,EAAkBsD,SACd,CAAEuE,IAAqB,OAAlB,EAAEM,EAAYnI,WAAI,EAAhB,EAAkBsD,UACzBsE,EAAQ,KAEdnK,MAAOC,GAAOoK,QAEhB,eAAC3I,EAAA,QAAI,WACH,cAACvB,EAAA,QAAI,CAACH,MAAOC,GAAOmF,SAAS,SAAkB,OAAlB,EAAEsF,EAAYnI,WAAI,EAAhB,EAAkB6C,WACjD,cAACjF,EAAA,QAAI,CAACH,MAAOC,GAAOkN,aAAa,SAAEzC,EAAYjI,UAC/C,cAACtC,EAAA,QAAI,CAACH,MAAOC,GAAOkN,aAAa,SAAEzC,EAAYhI,gBAEjD,cAAC,UAAI,CACH8C,KAAK,SACLwH,KAAM,GACN5L,MAAM,QACNW,QAAS4K,EACT3M,MAAO,CAAEkN,WAAY,eAI1B3L,GACC,cAACkJ,GAAY,CACXlJ,QAASA,EACTS,QAAS,WACP2B,GAAW,SAQvB,IAAM1D,GAASK,UAAWC,OAAO,CAC/BqM,OAAQ,CACNnM,gBAAiB,WAEnBmB,UAAW,CACTwL,cAAe,MACf1M,WAAY,SACZwB,iBAAkB,KAClBlB,UAAW,OACXuI,aAAc,QAEhBuD,gBAAiB,CACfM,cAAe,MACf1M,WAAY,SACZwB,iBAAkB,KAClBlB,UAAW,OACXuI,aAAc,OACd8D,YAAa,OAEfhD,MAAO,CACL7J,MAAO,GACP8I,OAAQ,GACRxI,aAAc,GACdwM,YAAa,QACbC,YAAa,EACbC,YAAa,IAEfpI,SAAU,CACRnE,SAAU,GACVC,WAAY,OACZE,MAAO,SAET+L,aAAc,CACZlM,SAAU,GACVG,MAAO,W,qkBC3GJ,SAASqM,GAAiBhO,GAC7B,OACI,cAAC+K,EAAA,QAAS,SAAK/K,GAAU,IACrBO,MAAOC,GAAO2B,UAAU,SACxB,eAACF,EAAA,QAAI,CAAC1B,MAAOC,GAAOyN,KAAK,UACrB,cAAC,UAAI,CACDlI,KAAM/F,EAAWkO,KACjBX,KAAM,GACN5L,MAAM,UACNpB,MAAO,CAACsK,UAAW,YACvB,cAACnK,EAAA,QAAI,CAACH,MAAOC,GAAOG,KAAK,SAAEX,EAAWY,cAMtD,IAAMJ,GAASK,UAAWC,OAAO,CAC7BqB,UAAW,CACPpB,MAAO,IACP8I,OAAQ,IACRxI,aAAc,GACdyM,YAAa,EACbD,YAAa,UACb7M,gBAAiB,QACjBC,WAAY,UAEhBgN,KAAM,CACFzL,KAAM,EACNmL,cAAe,SACfzM,eAAgB,eAChBC,gBAAiB,IAErBR,KAAM,CACFa,SAAU,GACVC,WAAY,OACZE,MAAO,UACPiB,UAAW,SACXuL,kBAAmB,YC3CpB,SAASC,KACZ,OACI,cAACnM,EAAA,QAAI,CAAC1B,MAAOC,GAAO6N,UAI5B,IAAM7N,GAASK,UAAWC,OAAO,CAC7BuN,QAAS,CACLC,kBAAmB,EACnBT,YAAa,YCHd,SAASU,GAAcvO,GAC1B,OACI,eAACiC,EAAA,QAAI,CAAC1B,MAAOC,GAAO2B,UAAU,UAC1B,cAACzB,EAAA,QAAI,CAACH,MAAOC,GAAOI,MAAM,SAAEZ,EAAWY,QACvC,cAACwN,GAAO,IACPpO,EAAW2D,YAKxB,IAAMnD,GAASK,UAAWC,OAAO,CAC7BqB,UAAW,CACPK,KAAM,EACNzB,MAAO,OACP2B,QAAS,OACT8L,oBAAqB,GACrBC,qBAAsB,GACtBX,YAAa,EACbD,YAAa,UACb7M,gBAAiB,SAErBJ,MAAO,CACHY,SAAU,GACVC,WAAY,OACZE,MAAO,UACPmI,aAAc,U,4mBC9Bf,SAASE,GAAUhK,GACtB,OACI,cAAC,UAAoB,SAAKA,GAAU,IACpCkK,qBAAsB,UACtB3J,MAAOC,EAAOoJ,S,mlBCJf,SAAS8E,GAAO1O,GACnB,OACI,cAAC,WAAc,SAAKA,GAAU,IAC1BO,MAAOC,GAAOmO,OACdC,UAAWpO,GAAOqO,KAClBC,WAAYtO,GAAOqO,QAK/B,IAAMrO,GAASK,UAAWC,OAAO,CAC7B6N,OAAQ,CACJ3N,gBAAiB,QACjB8I,aAAc,GACdD,OAAQ,GACRzI,kBAAmB,GACnB0M,YAAa,EACbzM,aAAc,IAElBwN,KAAM,CACFrN,SAAU,GACVC,WAAY,OACZE,MAAO,aCvBFoN,GAAiBlO,UAAWC,OAAO,CAC5CqB,UAAW,CACPK,KAAM,EACNtB,eAAgB,WAChBF,gBAAgB,sBAEpBoB,MAAO,CACH4M,SAAU,WACVjO,MAAO,OACP8I,OAAQ,MACR5I,WAAY,SACZG,kBAAmB,KACnBJ,gBAAiB,UACjBwN,oBAAqB,GACrBC,qBAAsB,GACtBQ,OAAQ,IAEZrO,MAAO,CACHY,SAAU,GACVC,WAAY,OACZE,MAAO,UACPgB,eAAgB,MCIjB,SAASuM,GAAclP,GAC5B,IAAMiL,EAAcC,qBAAW1H,GACzBwJ,EAAaC,2BACnB,EAA4BhN,mBAAS,IAAG,WAAjCkP,EAAM,KAAEC,EAAS,KACxB,EAA4BnP,mBAAS,IAAG,WAAjCoP,EAAM,KAAEC,EAAS,KACxB,EAAgCrP,qBAAkC,WAA3D4F,EAAQ,KAAE0J,EAAW,KACtBC,EAAcC,iBAAO,IAAIC,WAASC,MAAM,MAAMC,QACpD,EAAwB3P,oBAAS,GAAM,WAAhC4P,EAAI,KAAEC,EAAO,KACpB,EAAgC7P,oBAAS,GAAM,WAAxCI,EAAQ,KAAEyL,EAAW,KA8B5B,OA5BA1L,qBAAU,WAAO,IAAD,EACV2P,EAAuB,OAAnB,EAAG9E,EAAYnI,WAAI,EAAhB,EAAkB+C,SAC7B,GAAIkK,EAAM,CACR,IAAIC,EAAyB,GAC7BC,OAAOC,QAAQH,GAAMI,SAAQ,YAAmB,IAAD,WAAXzG,GAAF,KAAO,MACvCsG,EAAK,eACAA,GAAK,CACR,CACEtG,MAAOA,EAAM5D,GACbsK,MAAU1G,EAAM5D,GAAE,MAAM4D,EAAM3D,WAIpCwJ,EAAYS,MAEb,IAEH5P,qBAAU,WACa,GAAjB+O,EAAOpD,QACTsE,WAAS9N,UAEU,GAAjB4M,EAAOpD,QAAesD,EACxBvD,GAAY,GAEZA,GAAY,KAEb,CAACqD,EAAQE,IAGV,cAACxN,EAAA,QAAK,CACJE,aAAa,EACbD,QAAS9B,EAAW8B,QACpBE,cAAc,OACdsO,OAAQ,WACNZ,WAASa,OAAOf,EAAa,CAC3BgB,QAAS,EACTC,SAAU,IACVC,iBAAiB,IAChBC,SACH,SAEF,eAAC1O,EAAA,QAAI,CAAC1B,MAAOC,GAAO2B,UAAU,UAC5B,cAAC4I,EAAA,QAAS,CACR8B,UAAW,WACT2C,EAAYoB,SAAS,KACrBtB,EAAU,IACVF,EAAU,IACVU,GAAQ,IAEVhD,WAAY9M,EAAWuC,QACvBhC,MAAOM,UAAWgQ,qBAEpB,eAACnB,GAAA,QAASzN,KAAI,CACZ1B,MAAO,CAAC,CAAEuQ,UAAW,CAAC,CAAEC,WAAYvB,KAAkBhP,GAAO4B,OAAO,UAEpE,cAAC1B,EAAA,QAAI,CAACH,MAAOC,GAAOI,MAAM,SAAC,aAC3B,cAAC,GAAS,CACR8I,MAAOyF,EACPxC,aAAcyC,EACd4B,aAAa,UACb1G,eAAe,aACfL,YAAY,4BACZ2C,UAAW,EACX1C,qBAAqB,YAEvB,cAACwE,GAAM,CACLuC,MAAOpL,EACP6D,MAAO2F,EACPuB,SAAUtB,EACVO,KAAMA,EACNC,QAASA,EACT7F,YAAY,YAEd,cAAClK,EAAM,CACLa,MAAM,YACNiM,UAAW,WACT2C,EAAYoB,SAAS,KACrBd,GAAQ,GACRR,EAAU,IACVF,EAAU,IACVpC,GAAcA,EAAWQ,SAAS,aAEpCV,WAAY9M,EAAWuC,QACvBlC,SAAUA,Y,aClHf,SAAS6Q,GAAS,GAA+B,IAA7BnB,EAAI,EAAJA,KACzB,EAAwB9P,mBAAc,IAAG,WAAlC8F,EAAI,KAAEoL,EAAO,KASpB,OARA/Q,qBAAU,WACS,sBAAb2P,EAAK5J,MACPgL,EAAQ,gBAEO,uBAAbpB,EAAK5J,MACPgL,EAAQ,eAET,IAED,eAAClP,EAAA,QAAI,WACH,eAACA,EAAA,QAAI,CAAC1B,MAAOC,GAAO2B,UAAU,UAC5B,eAACF,EAAA,QAAI,CAAC1B,MAAO,CAAEoN,cAAe,OAAQ,UACpC,cAAC,UAAI,CACHL,OAAO,OACPvH,KAAMA,EACNwH,KAAM,GACN5L,MAAM,UACNpB,MAAO,CAAEsK,UAAW,YAEtB,eAAC5I,EAAA,QAAI,WACH,cAACvB,EAAA,QAAI,CAAC4M,OAAO,QAAQ/M,MAAOC,GAAOG,KAAK,SACrCoP,EAAKnP,MAAQ,IAAMmP,EAAKjK,KAE3B,cAACpF,EAAA,QAAI,CAAC4M,OAAO,cAAc/M,MAAOC,GAAO4Q,IAAI,SAC1CrB,EAAK7J,oBAIZ,cAACxF,EAAA,QAAI,CAAC4M,OAAO,OAAO/M,MAAOC,GAAO4Q,IAAI,SAAErB,EAAK9J,UAE/C,cAACmI,GAAO,OAKd,IAAM5N,GAASK,UAAWC,OAAO,CAC/BqB,UAAW,CACTwL,cAAe,MACf1M,WAAY,SACZC,eAAgB,gBAChBC,gBAAiB,IAEnBR,KAAM,CACJa,SAAU,GACVC,WAAY,OACZE,MAAO,WAETyP,IAAK,CACH5P,SAAU,GACVG,MAAO,aCjDJ,SAAS0P,GAAKrR,GAGjB,OACI,cAACsR,GAAA,QAAQ,CAACvB,KAAM/P,EAAW+P,KAAMwB,WAHQ,SAAH,OAAMC,EAAI,EAAJA,KAAI,OAAO,cAACN,GAAQ,CAACnB,KAAMyB,OCOhE,SAASC,GAAK,GAAY,EAAVzE,WAA2B,IAAD,EACjD/B,EAAcC,qBAAW1H,GAC/B,EAAevD,mBAAqC,OAA7B,EAAagL,EAAYnI,WAAI,EAAhB,EAAkBkD,MAA/C+J,EAAqD,SAAjD,GACX,EAAyB9P,mBAAS,gBAA3ByR,EAAuC,SAAzB,GACrB,EAAyBzR,mBAA0B,cAACoR,GAAI,CAACtB,KAAMA,KAAxD4B,EAAiE,SAAnD,GACrB,EAAgC1R,oBAAS,GAAM,WAAxC2R,EAAQ,KAAEC,EAAW,KAC5B,EAA4B5R,mBAAS,CAAEW,MAAO,GAAIyB,QAAS,KAAK,WAAzD2B,EAAM,KAAEC,EAAS,KACxB,EAA8BhE,oBAAS,GAAM,WAAtC6B,EAAO,KAAEoC,EAAU,KAUpBO,EAAQ,SAAC7D,EAAeyB,GAC5B4B,EAAU,CAAErD,MAAOA,EAAOyB,QAASA,IACnC6B,GAAW,IAGb,OACE,eAACjC,EAAA,QAAI,CAAC1B,MAAOC,GAAO2B,UAAU,UAC5B,cAACF,EAAA,QAAI,UACH,cAAC8K,GAAM,CAACK,cAAc,MAExB,cAAC0E,EAAA,QAAU,CACTC,YAAY,EACZC,gCAAgC,EAChCzR,MAAOC,GAAOyR,KAAK,SAEnB,cAACjE,GAAgB,CACfE,KAAK,eACLtN,MAAM,WACN0B,QA1BwB,WACH,IAAvB2I,EAAYjI,QACd6O,GAAY,GAEZpN,EAAM,SAAU,gFAyBhB,cAACxC,EAAA,QAAI,CAAC1B,MAAOC,GAAO4B,MAAM,SACxB,cAACmM,GAAa,CAAC3N,MAAO8Q,EAAe,SAAEC,MAExCC,GACC,cAAC1C,GAAa,CACZpN,QAAS8P,EACTrP,QAAS,WACPsP,GAAY,MAIlB,cAACjQ,EAAM,CACLhB,MAAOoD,EAAOpD,MACdyB,QAAS2B,EAAO3B,QAChBP,QAASA,EACTS,QAAS,WACP2B,GAAW,MAGf,cAACgO,EAAA,UAAS,CAAC3R,MAAM,QAAQ4R,aAAa,EAAOnR,gBAAgB,eAKnE,IAAMR,GAASK,UAAWC,OAAO,CAC/BqB,UAAW,CACTK,KAAM,EACNmL,cAAe,SACf3M,gBAAiB,WAEnBiR,KAAM,CACJzP,KAAM,EACNG,eAAgB,KAChBF,iBAAkB,MAEpBL,MAAO,CACLI,KAAM,EACNmL,cAAe,SACflL,iBAAkB,Q,+kBCvFf,SAAS2P,GAAYpS,GACxB,OACI,cAAC,iBAAa,SAAKA,GAAU,IACzBqS,6BAA6B,EAC7BnI,qBAAqB,UACrB3J,MAAOC,EAAOoJ,SCanB,SAAS0I,GAAmBtS,GAC/B,IAAMgN,EAAaC,2BACbuC,EAAcC,iBAAO,IAAIC,WAASC,MAAM,MAAMC,QACpD,EAAoC3P,mBAAS,IAAG,WAAzCsS,EAAU,KAAEC,EAAa,KAChC,EAA0BvS,mBAAS,IAAG,WAA/ByJ,EAAK,KAAEkH,EAAQ,KAEhB6B,EAAQ,WACVD,EAAc,IACd5B,EAAS,IACTpB,EAAYoB,SAAS,MAGzB,OACI,cAAC/O,EAAA,QAAK,CACFE,aAAa,EACbD,QAAS9B,EAAW8B,QACpBE,cAAc,OACdsO,OAAQ,WACJZ,WAASa,OAAOf,EAAa,CACzBgB,QAAS,EACTC,SAAU,IACVC,iBAAiB,IAClBC,SACL,SAEF,eAAC1O,EAAA,QAAI,CAAC1B,MAAOC,GAAO2B,UAAU,UAC1B,cAAC4I,EAAA,QAAS,CACN8B,UAAW4F,EACX3F,WAAY9M,EAAWuC,QACvBhC,MAAOM,UAAWgQ,qBACtB,eAACnB,GAAA,QAASzN,KAAI,CACV1B,MAAO,CACH,CAAEuQ,UAAW,CAAC,CAAEC,WAAYvB,KAC5BhP,GAAO4B,OACT,UACF,cAAC1B,EAAA,QAAI,CAACH,MAAOC,GAAOI,MAAM,SAAC,aAC3B,cAAC,GAAS,CACN8I,MAAO6I,EACP5F,aAAc6F,EACdxB,aAAa,UACbpE,UAAW,EACX3C,YAAY,eAChB,cAACmI,GAAW,CACR1I,MAAOA,EACPiD,aAAc,SAAC+F,EAAYC,GACvB/B,EAAS+B,IAEb1I,YAAY,iBACZ9D,KAAK,QACLyM,QAAS,CACLC,UAAW,EACXC,UAAW,IACXC,UAAW,IACXC,KAAM,MACNC,WAAY,MAEpB,cAAClT,EAAM,CACHa,MAAM,YACNiM,UAAW,WACPG,GAAcA,EAAWQ,SAAS,wBAClCiF,KAEJ3F,WAAY9M,EAAWuC,kBCnFxC,IAAM2Q,GAAiBrS,UAAWC,OAAO,CAC5CqB,UAAW,CACPQ,eAAgB,QAChBvB,kBAAmB,KACnBD,gBAAiB,OACjBgS,qBAAsB,EACtBC,mBAAoB,EACpBlS,eAAgB,SAChBF,gBAAiB,WAErBiN,KAAM,CACFN,cAAe,MACfzM,eAAgB,iBAEpByC,SAAU,CACNlB,iBAAkB,KAClBrB,kBAAmB,KACnBF,eAAgB,SAChBF,gBAAiB,SAErBL,KAAM,CACFa,SAAU,IAEd6R,QAAS,CACL7R,SAAU,IAEdgQ,KAAM,CACF7D,cAAe,MACfzM,eAAgB,gBAChBC,gBAAiB,W,UC3BlB,SAASmS,GAAkB,GAAoC,IAAlCvD,EAAI,EAAJA,KAC1BrG,GAAkBqG,EAAKrG,MACvB6J,GAAyBxD,EAAKwD,aACpC,EAAsBtT,mBAASyJ,EAAQ6J,GAAhCC,EAA6C,SAAlC,GAClB,OACI,eAACvR,EAAA,QAAI,CAAC1B,MAAOC,GAAO2B,UAAU,UAC1B,cAACzB,EAAA,QAAI,CAACH,MAAOC,GAAOI,MAAM,SAAEmP,EAAK0D,SACjC,eAACxR,EAAA,QAAI,CAAC1B,MAAO,CAAEoN,cAAe,MAAOzM,eAAgB,iBAAkB,UACnE,eAACR,EAAA,QAAI,CAACH,MAAOC,GAAO0F,YAAY,UAAE6J,EAAKwD,aAAa,MAAIC,KACxD,cAAC9S,EAAA,QAAI,CAACH,MAAOC,GAAOI,MAAM,SAAEmP,EAAKrG,cAMjD,IAAMlJ,GAASK,UAAWC,OAAO,CAC7BqB,UAAW,CACPnB,gBAAiB,UACjBK,aAAc,GACdqB,QAAS,EACTC,eAAgB,GAEpB/B,MAAO,CACHY,SAAU,GACVG,MAAO,WAEXuE,YAAa,CACT1E,SAAU,GACVG,MAAO,YCpBR,SAAS+R,GAAsB1T,GACpC,MAA8BC,oBAAS,GAAM,WAAtC6B,EAAO,KAAEoC,EAAU,KAC1B,EAAwBjE,mBAAS,IAAG,WAA7B8P,EAAI,KAAE4D,EAAO,KAEpBvT,qBAAU,WACRuT,EAAQ,MACR,IAQF,OACE,eAAC1R,EAAA,QAAI,WACH,cAAC8I,EAAA,QAAS,CAACxK,MAAOC,GAAO2B,UAAWG,QARzB,WACb4B,GAAW,SAAC0L,GAAO,OAAMA,MAO6B,SAClD,eAAC3N,EAAA,QAAI,CAAC1B,MAAOC,GAAOyN,KAAK,UACvB,cAACvN,EAAA,QAAI,CAACH,MAAOC,GAAOG,KAAK,SAAC,uBAC1B,cAAC,WAAI,CACH2M,OAAO,OACPvH,MAAkB,IAAZjE,EAAoB,eAAiB,aAC3CyL,KAAM,UAGXzL,GACC,cAACG,EAAA,QAAI,CAAC1B,MAAOC,GAAOmD,SAAS,SAC3B,cAAC2N,GAAA,QAAQ,CAACvB,KAAMA,EAAMwB,WAfoB,SAAH,OAAMC,EAAI,EAAJA,KAAI,OAAO,cAAC8B,GAAiB,CAACvD,KAAMyB,YCrBpF,SAASoC,GAAU,GAA4B,IAA1B7D,EAAI,EAAJA,KACxB,OACI,eAAC9N,EAAA,QAAI,CAAC1B,MAAOC,GAAO2B,UAAU,UAC1B,cAACqI,EAAA,QAAK,CACFC,OAAQ,CAAEE,IAAKoF,EAAK8D,UACpBtT,MAAO,CAAEuT,SAAU,IAAKC,UAAW,OACvC,eAAC9R,EAAA,QAAI,CAAC1B,MAAO,CAAEkN,WAAY,GAAI,UAC3B,cAAC/M,EAAA,QAAI,CAACH,MAAOC,GAAOI,MAAM,SAAEmP,EAAKhK,OACjC,eAACrF,EAAA,QAAI,CAACH,MAAOC,GAAO0F,YAAY,UAAC,YAAU6J,EAAKiE,SAChD,eAACtT,EAAA,QAAI,CAACH,MAAOC,GAAO0F,YAAY,UAAC,SAAO6J,EAAK5J,QAC7C,eAAClE,EAAA,QAAI,CAAC1B,MAAO,CAAEoN,cAAe,MAAOzM,eAAgB,iBAAkB,UACnE,eAACR,EAAA,QAAI,CAACH,MAAOC,GAAOI,MAAM,UAAEmP,EAAKkB,MAAM,SAAOlB,EAAKrG,SACnD,eAAChJ,EAAA,QAAI,CAACH,MAAOC,GAAOI,MAAM,UAAC,MAAImP,EAAKkE,kBAOxD,IAAMzT,GAASK,UAAWC,OAAO,CAC7BqB,UAAW,CACPwL,cAAe,MACf3M,gBAAiB,UACjBK,aAAc,GACdqB,QAAS,EACTC,eAAgB,GAEpB/B,MAAO,CACHY,SAAU,GACVG,MAAO,WAEXuE,YAAa,CACT1E,SAAU,GACVG,MAAO,YCvBR,SAASuS,GAAclU,GAC5B,MAA8BC,oBAAS,GAAM,WAAtC6B,EAAO,KAAEoC,EAAU,KAC1B,EAAwBjE,mBAAS,IAAG,WAA7B8P,EAAI,KAAE4D,EAAO,KAEpBvT,qBAAU,WACRuT,EAAQ,MACP,IAQH,OACE,eAAC1R,EAAA,QAAI,WACH,cAAC8I,EAAA,QAAS,CAACxK,MAAOC,GAAO2B,UAAWG,QARzB,WACb4B,GAAW,SAAC0L,GAAO,OAAMA,MAO6B,SAClD,eAAC3N,EAAA,QAAI,CAAC1B,MAAOC,GAAOyN,KAAK,UACvB,cAACvN,EAAA,QAAI,CAACH,MAAOC,GAAOG,KAAK,SAAC,UAC1B,cAAC,WAAI,CACH2M,OAAO,OACPvH,MAAkB,IAAZjE,EAAoB,eAAiB,aAC3CyL,KAAM,UAGXzL,GACC,cAACG,EAAA,QAAI,CAAC1B,MAAOC,GAAOmD,SAAS,SAC3B,cAAC,WAAQ,CAACoM,KAAMA,EAAMwB,WAfY,SAAH,OAAMC,EAAI,EAAJA,KAAI,OAAO,cAACoC,GAAS,CAAC7D,KAAMyB,YCX5D,SAAS2C,GAAS,GAA6B,IAA3BnH,EAAU,EAAVA,WACjC,EAA8B/M,oBAAS,GAAM,WAAtC6B,EAAO,KAAEoC,EAAU,KAC1B,OACE,eAACjC,EAAA,QAAI,CAAC1B,MAAOC,GAAO2B,UAAU,UAC5B,eAACF,EAAA,QAAI,CAAC1B,MAAOC,GAAO4T,SAAS,UAC3B,eAACnS,EAAA,QAAI,CAAC1B,MAAOC,GAAO2M,OAAO,UACzB,cAAC,UAAI,CACHG,OAAO,OACPvH,KAAK,sBACLwH,KAAM,GACN5L,MAAM,QACNW,QAAS,WACP0K,GAAcA,EAAWQ,SAAS,WAGtC,cAAC9M,EAAA,QAAI,CAACH,MAAOC,GAAO6T,WAAW,SAAC,4BAElC,eAACpS,EAAA,QAAI,CAAC1B,MAAO,CAAEiC,KAAM,EAAGtB,eAAgB,gBAAiBoT,cAAe,GAAI,UAC1E,eAACrS,EAAA,QAAI,WACH,cAACvB,EAAA,QAAI,CAACH,MAAOC,GAAOI,MAAM,SAAC,aAC3B,cAACF,EAAA,QAAI,CAACH,MAAOC,GAAO+T,SAAS,SAAC,sBAC9B,cAAC7T,EAAA,QAAI,CAACH,MAAOC,GAAOI,MAAM,SAAC,YAC3B,cAACF,EAAA,QAAI,CAACH,MAAOC,GAAO+T,SAAS,SAAC,4BAEhC,eAACtS,EAAA,QAAI,CAAC1B,MAAOC,GAAO2O,OAAO,UACzB,eAAClN,EAAA,QAAI,CAAC1B,MAAO,CAAEoN,cAAe,OAAQ,UACpC,cAAC1L,EAAA,QAAI,CAAC1B,MAAO,CAAC,CAAES,gBAAiB,aAAeR,GAAOgU,KAAK,SAC1D,cAAC9T,EAAA,QAAI,CAACH,MAAOC,GAAO6T,WAAW,SAAC,aAElC,cAACpS,EAAA,QAAI,CAAC1B,MAAO,CAAC,CAAES,gBAAiB,OAASR,GAAOgU,KAAK,SACpD,cAAC9T,EAAA,QAAI,CAACH,MAAOC,GAAO6T,WAAW,SAAC,mBAGpC,cAAC3T,EAAA,QAAI,CAACH,MAAO,CACXiB,SAAU,GACVC,WAAY,OACZE,MAAO,SACP,SAAC,uBAIT,eAACM,EAAA,QAAI,CAAC1B,MAAOC,GAAOiU,YAAY,UAC9B,eAACxS,EAAA,QAAI,CAAC1B,MAAO,CAAEiC,KAAM,EAAGkS,WAAY,QAAS,UAC3C,cAACR,GAAa,IACd,cAACR,GAAqB,OAExB,cAACzR,EAAA,QAAI,CAAC1B,MAAO,CAAEiC,KAAM,GAAI,SACvB,cAACzC,EAAM,CACLuC,QAAS,WAAQ4B,GAAW,IAC5BtD,MAAM,mBAGZ,cAAC0R,GAAkB,CACjB/P,QAAS,WACP2B,GAAW,IAEbpC,QAASA,IACX,cAACoQ,EAAA,UAAS,CAAC3R,MAAM,QAAQ4R,aAAa,EAAOnR,gBAAgB,eAKnE,IAAMR,GAASK,UAAWC,OAAO,CAC/BqB,UAAW,CACTK,KAAM,EACNmL,cAAe,SACf3M,gBAAiB,WAEnBmM,OAAQ,CACN3K,KAAM,EACNmL,cAAe,MACf1M,WAAY,UAEdoT,WAAY,CACV7S,SAAU,GACVC,WAAY,OACZE,MAAO,SAETyS,SAAU,CACR5R,KAAM,EACNxB,gBAAiB,WAEnBJ,MAAO,CACLY,SAAU,GACVG,MAAO,SACPP,kBAAmB,MAErBmT,SAAU,CACR/S,SAAU,GACVG,MAAO,QACPP,kBAAmB,KACnB0I,aAAc,GAEhBqF,OAAQ,CACNxB,cAAe,MACfzM,eAAgB,gBAChBuB,iBAAkB,MAEpB+R,IAAK,CACH3K,OAAQ,GACR5I,WAAY,SACZC,eAAgB,SAChBG,aAAc,EACdD,kBAAmB,EACnB2M,YAAa,GAEf0G,YAAa,CACXjS,KAAM,EACNmL,cAAe,SACflL,iBAAkB,Q,UCjHf,SAASkS,GAAY3U,GACxB,OACI,cAAC,eAAiB,CACd4U,KACI,cAAC,UAAI,CACD7O,KAAK,uBACLwH,KAAM,GACN5L,MAAM,UAEdkT,WAAY7U,EAAW6U,WACvBjU,MAAOZ,EAAWY,MAClBkU,WAAYtU,GAAOI,MACnBmU,cAAe/U,EAAW+U,cAC1BC,mBAAoBxU,GAAOI,MAC3BqU,cAAe,CAAEjU,gBAAiB,WAClCK,aAAc,IACd6T,eAAgB,CAAElU,gBAAiB,UAAWK,aAAc,KAC5D8T,sBAAsB,UACtBC,WAAY,GACZC,mBAAoB,CAAEzH,YAAa,MAK/C,IAAMpN,GAASK,UAAWC,OAAO,CAC7BF,MAAO,CACHY,SAAU,GACVC,WAAY,OACZE,MAAO,WC5BA,SAAS2T,GAAqB,GAA6B,IAA3BtI,EAAU,EAAVA,WAC7C,OACE,eAAC8E,EAAA,QAAU,CAACyD,sBAAuB/U,GAAO2B,UAAWqT,eAAe,EAAM,UACxE,eAACvT,EAAA,QAAI,CAAC1B,MAAOC,GAAO4T,SAAS,UAC3B,eAACnS,EAAA,QAAI,CAAC1B,MAAOC,GAAO2M,OAAO,UACzB,cAAC,UAAI,CACHG,OAAO,OACPvH,KAAK,sBACLwH,KAAM,GACN5L,MAAM,QACNW,QAAS,WACP0K,GAAcA,EAAWQ,SAAS,eAGtC,cAAC9M,EAAA,QAAI,CAACH,MAAOC,GAAO6T,WAAW,SAAC,gBAElC,cAAC3T,EAAA,QAAI,CAACH,MAAOC,GAAOiV,OAAO,SAAC,yBAC5B,cAAC/U,EAAA,QAAI,CAACH,MAAOC,GAAO2O,OAAO,SAAC,4BAE9B,eAAClN,EAAA,QAAI,CAAC1B,MAAOC,GAAOiU,YAAY,UAC9B,eAACxS,EAAA,QAAI,WACH,cAACvB,EAAA,QAAI,CAACH,MAAOC,GAAOwE,OAAO,SAAC,WAC5B,cAACtE,EAAA,QAAI,CAACH,MAAOC,GAAO0F,YAAY,SAAC,4BAEnC,eAACjE,EAAA,QAAI,WACH,cAACvB,EAAA,QAAI,CAACH,MAAOC,GAAOwE,OAAO,SAAC,mBAC5B,cAACtE,EAAA,QAAI,CAACH,MAAOC,GAAO0F,YAAY,SAAC,gBAEnC,eAACjE,EAAA,QAAI,WACH,cAACvB,EAAA,QAAI,CAACH,MAAOC,GAAOwE,OAAO,SAAC,oBAC5B,eAACtE,EAAA,QAAI,CAACH,MAAOC,GAAO0F,YAAY,UAAC,YAE/B,cAACxF,EAAA,QAAI,CAACH,MAAO,CAAEkB,WAAY,QAAS,SAAC,sBAGzC,cAACkT,GAAW,CACVE,WAAY,aACZjU,MAAM,mBACNmU,cAAc,0BAGlB,cAAC7C,EAAA,UAAS,CAAC3R,MAAM,QAAQ4R,aAAa,EAAOnR,gBAAgB,eAKnE,IAAMR,GAASK,UAAWC,OAAO,CAC/BqB,UAAW,CACTK,KAAM,EACNmL,cAAe,SACf3M,gBAAiB,WAEnBmM,OAAQ,CACNQ,cAAe,MACf1M,WAAY,UAEdoT,WAAY,CACV7S,SAAU,GACVG,MAAO,SAETyS,SAAU,CACR5R,KAAM,EACNxB,gBAAiB,WAEnByU,OAAQ,CACNjU,SAAU,GACVC,WAAY,OACZE,MAAO,QACPP,kBAAmB,KACnBsT,WAAY,IAEdvF,OAAQ,CACN3N,SAAU,GACVC,WAAY,OACZE,MAAO,QACPP,kBAAmB,KACnBsT,WAAY,IAEdD,YAAa,CACXjS,KAAM,EACNmL,cAAe,SACflL,iBAAkB,KAClBvB,eAAgB,gBAElB8D,OAAQ,CACNxD,SAAU,GACVC,WAAY,OACZE,MAAO,WAETuE,YAAa,CACX1E,SAAU,GACVG,MAAO,aC/FI,SAAS+T,KACtB,IAAMC,EAAQC,oBACd,OACE,eAACD,EAAME,UAAS,CAACC,cAAe,CAAEC,aAAa,GAAQ,UACrD,cAACJ,EAAMK,OAAM,CACXjQ,KAAK,OACLkQ,UAAWxE,KACb,cAACkE,EAAMK,OAAM,CACXjQ,KAAK,WACLkQ,UAAW9B,KACb,cAACwB,EAAMK,OAAM,CACXjQ,KAAK,uBACLkQ,UAAWX,Q,qkBCfZ,SAASY,GAAWlW,GACvB,OACI,cAACgK,EAAA,QAAS,SAAKhK,GAAU,IACrBoK,gBAAgB,eAChB4G,aAAa,gBACb1G,eAAe,OACf6L,sBAAuB,GACvBlM,YAAY,SACZC,qBAAqB,UACrB3J,MAAOC,EAAOoJ,SCCX,SAASwM,GAAiB,GAA6B,IAA3BpJ,EAAU,EAAVA,WACnC/B,EAAcC,qBAAW1H,GAC/B,EAA0BvD,mBAAiB,IAAG,WAAvCyF,EAAK,KAAE2Q,EAAQ,KACtB,EAA8BpW,oBAAkB,GAAM,WAA/C6B,EAAO,KAAEoC,EAAU,KACpBoS,EAAgB,CACpB1V,MAAO,6BACPyB,QACE,8IAEJ,EAA4BpC,mBAASqW,GAAc,WAA5CtS,EAAM,KAAEC,EAAS,KAgBlBQ,EAAQ,SAAC7D,EAAeyB,GAC5B4B,EAAU,CAAErD,MAAOA,EAAOyB,QAASA,IACnC6B,GAAW,IAGb,OACE,eAACjC,EAAA,QAAI,CAAC1B,MAAOC,GAAO2B,UAAU,UAC5B,cAACF,EAAA,QAAI,CAAC1B,MAAO,CAAEkC,iBAAkB,OAAQ,SACvC,eAACR,EAAA,QAAI,WACH,cAACiU,GAAU,CAACxM,MAAOhE,EAAOiH,aAAc0J,IACxC,cAACtW,EAAM,CAACa,MAAM,SAAS0B,QAAS,kBAAM4B,GAAW,WAGrD,cAACtC,EAAM,CACLhB,MAAOoD,EAAOpD,MACdyB,QAAS2B,EAAO3B,QAChBP,QAASA,EACTS,QA/BwB,WACf,IAATmD,GACFuF,EAAY3H,gBAAgBoC,GAC5BsH,GAAcA,EAAWQ,SAAS,WAElC/I,EACE,qBACA,gEAGJP,GAAW,GACXD,EAAUqS,MAsBR,cAACpE,EAAA,UAAS,CAAC3R,MAAM,QAAQ4R,aAAa,EAAOnR,gBAAgB,cAKnE,IAAMR,GAASK,UAAWC,OAAO,CAC/BqB,UAAW,CACTK,KAAM,EACNtB,eAAgB,SAChBF,gBAAiB,WAEnBJ,MAAO,CACLY,SAAU,GACVC,WAAY,OACZE,MAAO,aC1DI,SAAS4U,GAAO,GAA6B,IAA3BvJ,EAAU,EAAVA,WAC/B,EAA0B/M,mBAAS,IAAG,WAA/ByF,EAAK,KAAE2Q,EAAQ,KACtB,EAAgCpW,mBAAS,IAAG,WAArCuW,EAAQ,KAAEC,EAAW,KACtBxL,EAAcC,qBAAW1H,GAM/B,OACE,eAACvB,EAAA,QAAI,CAAC1B,MAAOC,GAAO2B,UAAU,UAC5B,eAACF,EAAA,QAAI,CAAC1B,MAAO,CAAEkC,iBAAkB,OAAQ,UACvC,eAACR,EAAA,QAAI,CAAC1B,MAAO,CAAEuJ,aAAc,IAAK,UAChC,cAACU,EAAA,QAAK,CACJC,OAAQC,EAAQ,KAChBnK,MAAO,CAAEQ,MAAO,GAAI8I,OAAQ,MAE9B,cAACnJ,EAAA,QAAI,CAACH,MAAOC,GAAOI,MAAM,SAAC,YAC3B,cAACF,EAAA,QAAI,CAACH,MAAOC,GAAOI,MAAM,SAAC,0BAE7B,eAACqB,EAAA,QAAI,CAAC1B,MAAO,CAAEuJ,aAAc,IAAK,UAChC,cAACoM,GAAU,CAACxM,MAAOhE,EAAOiH,aAAc0J,IACxC,cAAClM,EAAa,CAACT,MAAO8M,EAAU7J,aAAc8J,IAC9C,cAAC1W,EAAM,CAACuC,QAlBK,WACnB2I,EAAY7H,OAAOsC,EAAO8Q,IAiBW5V,MAAM,cAEvC,cAACkK,EAAW,CACVwC,OAAO,iBACPhL,QAAS,WACP0K,GAAcA,EAAWQ,SAAS,WAEpC5M,MAAM,gBAER,cAACkK,EAAW,CACVwC,OAAO,uBACPhL,QAAS,WACP0K,GAAcA,EAAWQ,SAAS,qBAEpC5M,MAAM,2BAGV,cAACsR,EAAA,UAAS,CAAC3R,MAAM,QAAQ4R,aAAa,EAAOnR,gBAAgB,cAKnE,IAAMR,GAASK,UAAWC,OAAO,CAC/BqB,UAAW,CACTK,KAAM,EACNxB,gBAAiB,UACjBE,eAAgB,UAElBN,MAAO,CACLY,SAAU,GACVC,WAAY,OACZV,MAAO,IACPY,MAAO,aCpDI,SAAS+U,GAAO,GAA6B,IAA3B1J,EAAU,EAAVA,WAC/B,EAAgC/M,mBAAS,IAAG,WAArC0F,EAAQ,KAAE0F,EAAW,KAC5B,EAA0BpL,mBAAS,IAAG,WAA/ByF,EAAK,KAAE2Q,EAAQ,KACtB,EAAgCpW,mBAAS,IAAG,WAArCuW,EAAQ,KAAEC,EAAW,KAC5B,EAA8BxW,oBAAS,GAAM,WAAtC6B,EAAO,KAAEoC,EAAU,KACpB+G,EAAcC,qBAAW1H,GAE/B,EAAgCvD,mBAAS,IAAG,WAArCmG,EAAQ,KAAEuF,EAAW,KACtBK,EAAS,sBAAG,YAChB,IAAIhH,QAAeiH,0BAAoC,CACrDC,WAAYD,mBAA6BE,OACzCC,eAAe,EACfC,OAAQ,CAAC,EAAG,GACZC,QAAS,KAGNtH,EAAOuH,UACVZ,EAAY3G,EAAOwH,OAAO,GAAG7B,QAEhC,kBAXc,mCAqBf,OACE,eAAC1I,EAAA,QAAI,CAAC1B,MAAOC,GAAO2B,UAAU,UAC5B,cAACF,EAAA,QAAI,CAAC1B,MAAO,CAAEkC,iBAAkB,OAAQ,SACvC,eAACR,EAAA,QAAI,WACH,cAACsI,EAAQ,CAACE,OAAQrE,EAAU9D,QAAS0J,IACrC,cAACjC,EAAa,CACZL,MAAO/D,EACPgH,aAActB,EACduB,UAAW,KAEb,cAACsJ,GAAU,CAACxM,MAAOhE,EAAOiH,aAAc0J,IACxC,cAAClM,EAAa,CAACT,MAAO8M,EAAU7J,aAAc8J,IAC9C,cAAC1W,EAAM,CAACuN,OAAO,YAAYhL,QApBd,WACN,IAAToD,GAA2B,IAAZ8Q,GAA8B,IAAZ7Q,GAA8B,IAAZS,EACrDuQ,MAAM,wCAENzS,GAAW,IAgB2CtD,MAAM,mBAG5D,cAACgB,EAAM,CACLhB,MAAM,8BACNyB,QACE,oIAEFP,QAASA,EACTS,QAAS,WACP2B,GAAW,GACX+G,EAAY9H,OAAOuC,EAAO8Q,EAAU7Q,EAAUS,GAC9C4G,GAAcA,EAAWQ,SAAS,aAGtC,cAAC0E,EAAA,UAAS,CAAC3R,MAAM,QAAQ4R,aAAa,EAAOnR,gBAAgB,cAKnE,IAAMR,GAASK,UAAWC,OAAO,CAC/BqB,UAAW,CACTK,KAAM,EACNtB,eAAgB,SAChBF,gBAAiB,WAEnBJ,MAAO,CACLY,SAAU,GACVC,WAAY,OACZE,MAAO,aChFI,SAASiV,KACtB,IAAMjB,EAAQC,oBACd,OACE,eAACD,EAAME,UAAS,WACd,cAACF,EAAMK,OAAM,CACXjQ,KAAK,SACLkQ,UAAWM,GACX3D,QAAS,CACPhS,MAAO,GACPmV,aAAa,KAEjB,cAACJ,EAAMK,OAAM,CACXjQ,KAAK,SACLkQ,UAAWS,GACX9D,QAAS,CACPhS,MAAO,aACPiW,mBAAmB,KAEvB,cAAClB,EAAMK,OAAM,CACXjQ,KAAK,mBACLkQ,UAAWG,GACXxD,QAAS,CACPhS,MAAO,6BACPiW,mBAAmB,QCvBd,SAASC,KACtB,IAAM7L,EAAcC,qBAAW1H,GAC/B,OAAIyH,EAAY/H,QAEZ,cAAC6T,EAAA,QAAY,CAACxW,MAAO,CAAEiC,KAAM,EAAGtB,eAAgB,SAAUD,WAAY,UAAW,SAC/E,cAAC+V,EAAA,QAAiB,CAACzJ,KAAM,IAAK5L,MAAM,YAIhCsJ,EAAYnI,MAAQmI,EAAYnI,KAAK8C,SAAW,cAAC8P,GAAS,IAAM,cAACkB,GAAU,I,cCRxE,SAASK,KACtB,OACE,cAACF,EAAA,QAAY,CAACxW,MAAOC,GAAO2B,UAAU,SACpC,cAAC+U,GAAA,QAAmB,UAClB,eAAC,EAAY,WACX,cAACJ,GAAM,IACP,cAAC5E,EAAA,UAAS,CAAC3R,MAAM,QAAQ4R,aAAa,WAOhD,IAAM3R,GAASK,UAAWC,OAAO,CAC/BqB,UAAW,CACTK,KAAM,EACNxB,gBAAiB,c,0DCvBrBnB,EAAOC,QAAU,IAA0B,2C,gCCA3C,ySASMqX,EAAiB,CACrBC,OAAO,GAAD,w0BACNC,WAAW,GAAD,o0BACVC,UAAU,GAAD,mzBACTC,cAAc,GAAD,m0BACbC,kBAAkB,GAAD,yzBACjBC,MAAM,GAAD,y0BACLC,cAAc,GAAD,ozBACbC,YAAY,GAAD,01BAGAC,EAAUtQ,UAASuQ,cAAcV,GAE9CW,yBAAeF,EAAS,CACtBG,YAAaC,oCAA0BxR,aAGlC,IAAMrC,EAAeyT,EAAQrQ,OAEvB0Q,EAAYL,EAAQK,YAEpBpR,EAAW+Q,EAAQM,WAEnB7P,EAAUuP,EAAQvP,UAEhBuP,a","file":"static/js/app.d1b0a272.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/no-user.4a33880e.png\";","import { useEffect, useState } from \"react\";\nimport { StyleSheet, Text, TouchableOpacity, TouchableOpacityProps } from \"react-native\";\n\ninterface Properties extends TouchableOpacityProps {\n    title: string\n    disabled?: boolean\n}\n\nexport function Button(properties: Properties) {\n    const [opacity, setOpacity] = useState(1)\n    useEffect(() => {\n        if (properties.disabled) {\n            setOpacity(0.5)\n        } else {\n            setOpacity(1)\n        }\n    }, [properties.disabled])\n    return (\n        <TouchableOpacity {...properties} style={[styles.button, { opacity: opacity }]} disabled={properties.disabled}>\n            <Text style={styles.text}>{properties.title}</Text>\n        </TouchableOpacity>\n    )\n}\n\nconst styles = StyleSheet.create({\n    button: {\n        width: '100%',\n        backgroundColor: '#1F2D5A',\n        alignItems: 'center',\n        justifyContent: 'center',\n        paddingVertical: 12,\n        paddingHorizontal: 32,\n        borderRadius: 90,\n        elevation: 3,\n        marginTop: 16,\n    },\n    text: {\n        fontSize: 16,\n        fontWeight: 'bold',\n        letterSpacing: 0.25,\n        color: 'white',\n    }\n})","import { StyleSheet, GestureResponderEvent, Modal, Text, View } from \"react-native\";\nimport { Button } from \"../buttons/button\";\n\ninterface Properties {\n    visible: boolean | undefined\n    dismiss: ((event: GestureResponderEvent) => void) | undefined\n    title: string\n    content: string\n}\n\nexport function Dialog(properties: Properties) {\n    return (\n        <Modal {...properties}\n            visible={properties.visible}\n            transparent={true}\n            animationType=\"fade\">\n            <View style={DialogStyles.container}>\n                <View style={DialogStyles.field}>\n                    <Text style={DialogStyles.title}>{properties.title}</Text>\n                    <Text style={DialogStyles.content}>{properties.content}</Text>\n                    <Button onPress={properties.dismiss} title='CONTINUAR' />\n                </View>\n            </View>\n        </Modal>\n    )\n}\n\nexport const DialogStyles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: 'center',\n        backgroundColor: 'rgba(0, 0, 0, 0.8)',\n    },\n    field: {\n        marginHorizontal: '5%',\n        backgroundColor: '#F0F2F7',\n        borderRadius: 18,\n        padding: '5%',\n    },\n    title: {\n        marginVertical: 8,\n        fontSize: 24,\n        fontWeight: 'bold',\n    },\n    content: {\n        marginVertical: 8,\n        paddingHorizontal: '5%',\n        fontSize: 16,\n        textAlign: 'justify',\n    }\n})","import { createContext, useEffect, useMemo, useState } from \"react\";\nimport { User } from \"../models/user.model\";\nimport { firebaseAuth, storage, realtime } from \"../services/firebase.service\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport firebase from \"firebase/compat/app\";\nimport { Dialog } from \"../components/modals/dialog\";\n\ntype AuthContextProps = {\n  user: User | undefined;\n  company: string | undefined;\n  department: string | undefined;\n  loading: boolean;\n  signUp(\n    _email: string,\n    _password: string,\n    _fullName: string,\n    _portrait: string\n  ): Promise<void>;\n  signIn(_email: string, _password: string): Promise<void>;\n  signOut(): Promise<void>;\n  recoverPassword(_email: string): Promise<void>;\n  userUpdate(\n    _fullName: string,\n    _portrait?: string,\n    _currentPassword?: string,\n    _newPassword?: string\n  ): Promise<void>;\n};\n\nconst defaultState = {\n  user: undefined,\n  company: undefined,\n  department: undefined,\n  loading: true,\n  signUp: async () => { },\n  signIn: async () => { },\n  signOut: async () => { },\n  recoverPassword: async () => { },\n  userUpdate: async () => { },\n};\n\nexport const AuthContext = createContext<AuthContextProps>(defaultState);\n\ntype AuthProviderProps = {\n  children?: React.ReactNode;\n};\n\nconst AuthProvider = ({ children }: AuthProviderProps) => {\n  const [user, setUser] = useState<User>();\n  const [company, setCompany] = useState<string | undefined>(\"\");\n  const [department, setDepartment] = useState<string | undefined>(\"\");\n  const [loading, setLoading] = useState<boolean>(true);\n  const [dialog, setDialog] = useState({ title: \"\", content: \"\" })\n  const [visible, setVisible] = useState(false);\n\n  useEffect(() => {\n    firebaseAuth.onAuthStateChanged(async (currentUser) => {\n      if (currentUser) {\n        if (currentUser.emailVerified) {\n          if (!user) {\n            await _getUserRegister(currentUser.uid);\n          }\n        } else {\n          Alert(\"E-mail não verificado\", \"Por favor verifique seu [e-mail].\");\n          signOut();\n        }\n      } else {\n        signOut();\n      }\n      setLoading(false);\n    });\n  }, []);\n\n  const signUp = async (\n    _email: string,\n    _password: string,\n    _fullName: string,\n    _portrait: string\n  ) => {\n    setLoading(true);\n    await firebaseAuth\n      .createUserWithEmailAndPassword(_email, _password)\n      .then(async (result) => {\n        if (result.user != null) {\n          let validate = true;\n          firebaseAuth.languageCode = \"pt\";\n          result.user.sendEmailVerification().catch((error) => {\n            validate = false;\n            Alert(\n              \"Erro\",\n              `Erro ao enviar o e-mail de verificação. ${error.message}`\n            );\n          });\n          if (result.user && validate) {\n            let _portraitURL = await _uploadImage(_portrait, result.user.uid);\n            let _user: User = {\n              uid: result.user.uid,\n              email: _email,\n              fullName: _fullName,\n              company: \"\",\n              department: \"\",\n              verified: false,\n              branches: [{\n                id: \"\",\n                name: \"\"\n              }],\n              logs: [{\n                id: \"\",\n                date: \"\",\n                title: \"\",\n                description: \"\",\n                type: \"\"\n              }],\n              portrait: _portraitURL\n            }\n            await _userRegister(_user);\n          }\n        }\n      })\n      .catch((error) => {\n        if (error.code === \"auth/weak-password\") {\n          Alert(\"Senha fraca\", \"Informe uma senha mais forte.\");\n        } else if (error.code === \"auth/invalid-email\") {\n          Alert(\"E-mail inválido\", \"Por favor informe um e-mail válido.\");\n        } else {\n          Alert(\"Erro\", `Ocorreu um problema. ${error.message}`);\n        }\n      });\n  };\n\n  const signIn = async (_email: string, _password: string) => {\n    setLoading(true);\n    await firebaseAuth\n      .signInWithEmailAndPassword(_email, _password)\n      .catch((error) => {\n        if (error) {\n          Alert(\n            \"Inválido\",\n            \"Nenhum usuário encontrado com as credenciais fornecidas.\"\n          );\n        }\n        setLoading(false);\n      });\n  };\n\n  const signOut = async () => {\n    setLoading(true);\n    await firebaseAuth.signOut();\n    await AsyncStorage.clear();\n    setUser(undefined);\n    setCompany(\"\");\n    setDepartment(\"\");\n    setLoading(false);\n  };\n\n  const recoverPassword = async (_email: string) => {\n    await firebaseAuth.sendPasswordResetEmail(_email).catch((error) => {\n      Alert(\n        \"Erro\",\n        `Não foi encontrado um usuário com o endereço de e-mail fornecido. ${error.message}`\n      );\n    });\n  };\n\n  const userUpdate = async (\n    _fullName: string,\n    _portrait: string,\n    _currentPassword?: string,\n    _newPassword?: string\n  ) => {\n    setLoading(true);\n    let _portraitURL = \"\";\n    if (_portrait != user?.portrait) {\n      _portraitURL = await _uploadImage(_portrait, user?.uid!);\n    } else {\n      _portraitURL = user?.portrait;\n    }\n    let _user = firebaseAuth.currentUser!;\n    await realtime\n      .ref(\"users\")\n      .child(_user.uid)\n      .update({\n        fullName: _fullName,\n        portrait: _portraitURL,\n      })\n      .then(() => {\n        let _user: User = {\n          uid: user?.uid!,\n          fullName: _fullName,\n          email: user?.email!,\n          portrait: _portraitURL,\n          company: user?.company!,\n          department: user?.department!,\n          verified: user?.verified!,\n          branches: user?.branches!,\n          logs: user?.logs!,\n        };\n        _storeUser(_user);\n      });\n    if (_currentPassword && _newPassword) {\n      await _userUpdatePassword(_currentPassword, _newPassword);\n    }\n    setLoading(false);\n  };\n\n  const _reauthenticate = async (currentPassword: string) => {\n    const user = firebaseAuth.currentUser!;\n    const credentials = firebase.auth.EmailAuthProvider.credential(\n      user.email!,\n      currentPassword\n    );\n    return await user.reauthenticateWithCredential(credentials);\n  };\n\n  const _userUpdatePassword = async (\n    _currentPassword: string,\n    _newPassword: string\n  ) => {\n    if (_currentPassword && _newPassword) {\n      await _reauthenticate(_currentPassword)\n        .then(async () => {\n          await firebaseAuth.currentUser\n            ?.updatePassword(_newPassword)\n            .then(async () => {\n              await _alertPasswordChange();\n            })\n            .catch((error) => {\n              Alert(\"Erro\", error.message);\n            });\n        })\n        .catch((error) => {\n          Alert(\"Erro\", error.message);\n        });\n    }\n  };\n\n  const _alertPasswordChange = async () =>\n    new Promise((resolve) => {\n      Alert(\n        \"Alteração de senha\",\n        \"Sua senha foi alterada. Efetue acesso novamente.\"\n      );\n      signOut();\n    });\n\n  const Alert = (title: string, content: string) => {\n    setDialog({ title: title, content: content })\n    setVisible(true);\n  };\n\n  const _uploadImage = async (\n    _portrait: string,\n    _uid: string,\n  ) => {\n    const response = await fetch(_portrait);\n    const blob = await response.blob();\n    const filename = _uid;\n    let urlImage = \"\";\n    await storage\n      .ref()\n      .child(`${filename}`)\n      .put(blob)\n      .then(async (snapshot) => {\n        urlImage = await snapshot.ref.getDownloadURL();\n      })\n      .catch((error) => console.log(error));\n    return urlImage;\n  };\n\n  const _userRegister = async (_user: User) => {\n    await realtime\n      .ref(\"users\")\n      .child(_user.uid)\n      .set({\n        fullName: _user.fullName,\n        portrait: _user.portrait,\n        company: _user.company,\n        department: _user.department,\n        verified: _user.verified,\n        branches: _user.branches,\n        logs: _user.logs,\n      })\n      .then(() => {\n        let _user_: User = {\n          uid: _user.uid,\n          fullName: _user.fullName,\n          email: _user.email,\n          portrait: _user.portrait,\n          company: _user.company,\n          department: _user.department,\n          verified: _user.verified,\n          branches: _user.branches,\n          logs: _user.logs\n        };\n        _storeUser(_user_);\n      });\n  };\n\n  const _getUserRegister = async (_uid: string) => {\n    await realtime\n      .ref(\"users\")\n      .child(_uid)\n      .once(\"value\")\n      .then(async (snapshot) => {\n        let _user: User = {\n          uid: _uid,\n          fullName: snapshot.val().fullName,\n          email: snapshot.val().email,\n          portrait: snapshot.val().portrait,\n          company: snapshot.val().company,\n          department: snapshot.val().department,\n          verified: snapshot.val().verified,\n          branches: snapshot.child(\"branches\").val(),\n          logs: snapshot.child(\"logs\").val(),\n        };\n        if (!_user.verified) {\n          let currentUser = await firebase.auth().currentUser;\n          if (currentUser?.emailVerified) {\n            _user.verified = true;\n            await _userRegister(_user);\n          }\n        }\n        await _storeUser(_user);\n      });\n  };\n\n  const _storeUser = async (_user: User) => {\n    let jsonUser = JSON.stringify(_user);\n    await AsyncStorage.setItem(\"user\", jsonUser);\n    setUser(_user);\n    _storeCompany(_user.company);\n    _storeDepartment(_user.department);\n  };\n\n  const _storeCompany = async (_company: string) => {\n    if (_company != \"\") {\n      await realtime\n        .ref(\"companies\")\n        .child(_company)\n        .once(\"value\")\n        .then(async (snapshot) => {\n          await AsyncStorage.setItem(\"company\", snapshot.val().name).then(() => {\n            setCompany(snapshot.val().name);\n          });\n        });\n    }\n  };\n\n  const _storeDepartment = async (_department: string) => {\n    if (_department != \"\") {\n      await realtime\n        .ref(\"departments\")\n        .child(_department)\n        .once(\"value\")\n        .then(async (snapshot) => {\n          await AsyncStorage.setItem(\"department\", snapshot.val()).then(() => {\n            setDepartment(snapshot.val());\n          });\n        });\n    }\n  };\n\n  const contextValue = useMemo(() => ({\n    user,\n    company,\n    department,\n    loading,\n    signUp,\n    signIn,\n    signOut,\n    recoverPassword,\n    userUpdate,\n  }), [\n    user,\n    company,\n    department,\n    loading,\n    signUp,\n    signIn,\n    signOut,\n    recoverPassword,\n    userUpdate,\n  ])\n\n  return (\n    <AuthContext.Provider\n      value={contextValue}\n    >\n      <Dialog\n        title={dialog.title}\n        content={dialog.content}\n        visible={visible}\n        dismiss={() => {\n          setVisible(false);\n        }}\n      />\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthProvider;\n","import { StyleSheet } from \"react-native\";\n\nexport const InputStyles = StyleSheet.create({\n    input: {\n        width: '100%',\n        height: 40,\n        backgroundColor: 'white',\n        color: '#123262',\n        fontSize: 16,\n        fontWeight: 'bold',\n        borderRadius: 18,\n        paddingHorizontal: 16,\n        marginBottom: 16\n    },\n})","import { TextInput, TextInputProps } from \"react-native\";\nimport { InputStyles as styles } from \"./input-styles\";\n\nexport function FullNameInput(properties: TextInputProps) {\n    return (\n        <TextInput {...properties}\n            placeholder=\"Nome completo\"\n            placeholderTextColor=\"#1F537E\"\n            style={styles.input} />\n    )\n}","import { TextInput, TextInputProps } from \"react-native\";\nimport { InputStyles as styles } from \"./input-styles\";\n\ninterface Properties extends TextInputProps {\n    placeholder?: string\n}\nexport function PasswordInput(properties: Properties) {\n    return (\n        <TextInput {...properties}\n            textContentType=\"password\"\n            secureTextEntry\n            autoCapitalize=\"none\"\n            placeholder={properties.placeholder ? properties.placeholder : \"Senha\"}\n            placeholderTextColor=\"#1F537E\"\n            style={styles.input} />\n    )\n}","import { StyleSheet, View, Image, GestureResponderEvent } from \"react-native\";\nimport { Button } from \"../buttons/button\";\n\ninterface Properties {\n    source?: string\n    onPress: ((event: GestureResponderEvent) => void)\n}\n\nexport function Portrait(properties: Properties) {\n    return (\n        <View style={styles.container}>\n            <Image\n                source={\n                    properties.source == '' ?\n                        require('../../../assets/no-user.png') : { uri: properties.source }\n                }\n                style={styles.image} />\n            <Button title=\"SELECIONAR\" onPress={properties.onPress} />\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        width: 172,\n        alignItems: 'center',\n        justifyContent: 'center',\n        alignSelf: 'center',\n        marginVertical: 16,\n    },\n    image: {\n        width: 128,\n        height: 128,\n        borderRadius: 90,\n        marginBottom: 2,\n    }\n})","import { StyleSheet, Text, Pressable, PressableProps } from 'react-native';\n\ninterface Properties extends PressableProps {\n    title: string\n}\n\nexport function CommandLink(properties: Properties) {\n    return (\n        <Pressable {...properties}>\n            <Text style={styles.text}>{properties.title}</Text>\n        </Pressable>\n    )\n}\n\nconst styles = StyleSheet.create({\n    text: {\n        width: '100%',\n        height: 40,\n        fontSize: 16,\n        fontWeight: 'bold',\n        letterSpacing: 0.25,\n        color: '#1F537E',\n        textAlign: 'center',\n        marginBottom: 40\n    }\n})","import { useContext, useEffect, useState } from \"react\";\nimport { GestureResponderEvent, Modal, ModalProps, View } from \"react-native\";\nimport { Dialog, DialogStyles as styles } from \"./dialog\";\nimport { Button } from \"../buttons/button\";\nimport { FullNameInput } from \"../inputs/fullname-input\";\nimport { PasswordInput } from \"../inputs/password-input\";\nimport { Portrait } from \"../portrait/portrait\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { AuthContext } from \"../../contexts/auth.provider\";\nimport { CommandLink } from \"../buttons/command-link\";\n\ninterface Properties extends ModalProps {\n  visible: boolean | undefined;\n  dismiss: ((event: GestureResponderEvent) => void) | undefined;\n}\n\nexport function UserSettings(properties: Properties) {\n  const authContext = useContext(AuthContext);\n  const FULLNAME = authContext.user?.fullName;\n  const PORTRAIT = authContext.user?.portrait;\n  const [fullName, setFullName] = useState<string | undefined>(FULLNAME);\n  const [currentPassword, setCurrentPassword] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [portrait, setPortrait] = useState<string | undefined>(PORTRAIT);\n  const [changePassword, setChangePassword] = useState<boolean | undefined>();\n  const [disabled, setDisabled] = useState(false);\n  const [dialog, setDialog] = useState({ title: \"\", content: \"\" });\n  const [visible, setVisible] = useState(false);\n\n  useEffect(() => {\n    setFullName(FULLNAME);\n    setPortrait(PORTRAIT);\n  }, []);\n\n  useEffect(() => {\n    if (!changePassword) {\n      if (portrait == PORTRAIT && fullName == FULLNAME) {\n        setDisabled(true);\n      } else {\n        setDisabled(false);\n      }\n    }\n  }, [portrait, fullName]);\n\n  useEffect(() => {\n    if (changePassword) {\n      if (\n        currentPassword.length > 5 &&\n        newPassword.length > 5 &&\n        confirmPassword.length > 5\n      ) {\n        if (newPassword == confirmPassword) {\n          setDisabled(false);\n        }\n      } else {\n        setDisabled(true);\n      }\n    }\n  }, [confirmPassword]);\n\n  const pickImage = async () => {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      allowsEditing: true,\n      aspect: [1, 1],\n      quality: 0.1,\n    });\n    if (!result.canceled) {\n      setPortrait(result.assets[0].uri);\n    }\n  };\n\n  const handleUpdateUser = async () => {\n    if (fullName == \"\") {\n      Alert(\"Dados mandatórios\", \"Por favor, preencher todos os campos\");\n    } else {\n      await authContext.userUpdate(\n        fullName!,\n        portrait,\n        currentPassword,\n        newPassword\n      );\n    }\n    handleCancel();\n  };\n\n  const handleChangePassword = () => {\n    setDisabled(true);\n    setChangePassword(true);\n  };\n\n  const handleCancel = () => {\n    setChangePassword(undefined);\n    setDisabled(false);\n    setCurrentPassword(\"\");\n    setNewPassword(\"\");\n    setConfirmPassword(\"\");\n    setFullName(FULLNAME);\n    setPortrait(PORTRAIT);\n  };\n\n  const Alert = (title: string, content: string) => {\n    setDialog({ title: title, content: content });\n    setVisible(true);\n  };\n\n  return (\n    <Modal\n      {...properties}\n      visible={properties.visible}\n      transparent={true}\n      animationType=\"fade\"\n    >\n      <View style={styles.container}>\n        <View style={styles.field}>\n          <Portrait source={portrait} onPress={pickImage} />\n          <FullNameInput\n            value={fullName}\n            onChangeText={setFullName}\n            maxLength={20}\n          />\n          {!changePassword && (\n            <CommandLink onPress={handleChangePassword} title=\"Alterar senha\" />\n          )}\n          {changePassword && (\n            <View>\n              <PasswordInput\n                value={currentPassword}\n                onChangeText={setCurrentPassword}\n                placeholder=\"Senha atual\"\n              />\n              <PasswordInput\n                value={newPassword}\n                onChangeText={setNewPassword}\n                placeholder=\"Nova senha\"\n              />\n              <PasswordInput\n                value={confirmPassword}\n                onChangeText={setConfirmPassword}\n                placeholder=\"Confirmar nova senha\"\n              />\n            </View>\n          )}\n          <Button\n            onPressIn={handleCancel}\n            onPressOut={properties.dismiss}\n            title=\"CANCELAR\"\n          />\n          <Button\n            disabled={disabled}\n            onPressIn={handleUpdateUser}\n            onPressOut={properties.dismiss}\n            title=\"CONFIRMAR\"\n          />\n        </View>\n      </View>\n      {visible && (\n        <Dialog\n          title={dialog.title}\n          content={dialog.content}\n          visible={visible}\n          dismiss={() => {\n            setVisible(false);\n          }}\n        />\n      )}\n    </Modal>\n  );\n}\n","import { useContext, useState } from \"react\";\nimport { StyleSheet, View, Text, Image, Pressable } from \"react-native\";\nimport { AuthContext } from \"../../contexts/auth.provider\";\nimport { MaterialIcons as Icon } from \"@expo/vector-icons\";\nimport { UserSettings } from \"../modals/user-settings\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { NavigationParams } from \"../../types/navigation.params\";\n\ninterface Properties {\n  returnOption: boolean;\n}\n\nexport function Header(properties: Properties) {\n  const authContext = useContext(AuthContext);\n  const navigation = useNavigation<NavigationParams>();\n  const [visible, setVisible] = useState(false);\n\n  const handleSignOut = async () => {\n    authContext.signOut();\n  };\n\n  const onPress = () => {\n    setVisible(true);\n  };\n\n  return (\n    <View style={styles.header}>\n      <Pressable onPress={onPress}>\n        <View\n          style={\n            properties.returnOption === false\n              ? styles.container\n              : styles.containerReturn\n          }\n        >\n          {properties.returnOption && (\n            <Icon\n              testID=\"icon\"\n              name=\"keyboard-arrow-left\"\n              size={48}\n              color=\"white\"\n              onPress={() => {\n                navigation.navigate(\"Home\");\n              }}\n              style={{ marginLeft: -60 }}\n            />\n          )}\n          <Image\n            source={\n              authContext.user?.portrait\n                ? { uri: authContext.user?.portrait }\n                : require(\"../../../assets/no-user.png\")\n            }\n            style={styles.image}\n          />\n          <View>\n            <Text style={styles.fullName}>{authContext.user?.fullName}</Text>\n            <Text style={styles.descriptions}>{authContext.company}</Text>\n            <Text style={styles.descriptions}>{authContext.department}</Text>\n          </View>\n          <Icon\n            name=\"logout\"\n            size={32}\n            color=\"white\"\n            onPress={handleSignOut}\n            style={{ marginLeft: \"auto\" }}\n          />\n        </View>\n      </Pressable>\n      {visible && (\n        <UserSettings\n          visible={visible}\n          dismiss={() => {\n            setVisible(false);\n          }}\n        />\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  header: {\n    backgroundColor: \"#1F2D5A\",\n  },\n  container: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginHorizontal: \"5%\",\n    marginTop: \"2.5%\",\n    marginBottom: \"2.5%\",\n  },\n  containerReturn: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginHorizontal: \"5%\",\n    marginTop: \"2.5%\",\n    marginBottom: \"2.5%\",\n    paddingLeft: \"10%\",\n  },\n  image: {\n    width: 52,\n    height: 52,\n    borderRadius: 90,\n    borderColor: \"white\",\n    borderWidth: 1,\n    marginRight: 13,\n  },\n  fullName: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    color: \"white\",\n  },\n  descriptions: {\n    fontSize: 13,\n    color: \"white\",\n  },\n});\n","import { StyleSheet, Pressable, PressableProps, Text, View } from \"react-native\";\nimport { MaterialIcons as Icon } from '@expo/vector-icons';\n\ninterface Properties extends PressableProps {\n    icon: any\n    title: string\n}\n\nexport function NavigationButton(properties: Properties) {\n    return (\n        <Pressable {...properties}\n            style={styles.container}>\n            <View style={styles.area}>\n                <Icon\n                    name={properties.icon}\n                    size={42}\n                    color=\"#123262\"\n                    style={{alignSelf: 'center'}} />\n                <Text style={styles.text}>{properties.title}</Text>\n            </View>\n        </Pressable>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        width: 100,\n        height: 100,\n        borderRadius: 18,\n        borderWidth: 1,\n        borderColor: '#8894ac',\n        backgroundColor: 'white',\n        alignItems: 'center',\n    },\n    area: {\n        flex: 1,\n        flexDirection: 'column',\n        justifyContent: 'space-around',\n        paddingVertical: 14,\n    },\n    text: {\n        fontSize: 14,\n        fontWeight: 'bold',\n        color: \"#123262\",\n        textAlign: 'center',\n        textAlignVertical: 'center',\n    }\n})","import { StyleSheet, View } from \"react-native\";\n\nexport function Divider() {\n    return (\n        <View style={styles.divider} />\n    )\n}\n\nconst styles = StyleSheet.create({\n    divider: {\n        borderBottomWidth: 1,\n        borderColor: 'silver',\n    },\n})","import { StyleSheet, Text, View } from \"react-native\"\nimport { Divider } from \"../dividers/divider\"\n\ninterface Properties {\n    title: string\n    children?: React.ReactNode\n}\n\nexport function HomeContainer(properties: Properties) {\n    return (\n        <View style={styles.container}>\n            <Text style={styles.title}>{properties.title}</Text>\n            <Divider />\n            {properties.children}\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        width: '100%',\n        padding: '2.5%',\n        borderTopLeftRadius: 18,\n        borderTopRightRadius: 18,\n        borderWidth: 1,\n        borderColor: '#8894ac',\n        backgroundColor: 'white',\n    },\n    title: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        color: '#1F537E',\n        marginBottom: '2.5%'\n    },\n})","import { TextInput as ReactNativeTextInput, TextInputProps } from \"react-native\";\nimport { InputStyles as styles } from \"./input-styles\";\n\nexport function TextInput(properties: TextInputProps) {\n    return (\n        <ReactNativeTextInput {...properties} \n        placeholderTextColor= \"#123262\"\n        style={styles.input} />\n    )\n}","import { StyleSheet } from \"react-native\";\nimport DropDownPicker, { DropDownPickerProps } from \"react-native-dropdown-picker\";\n\nexport function Picker(properties: DropDownPickerProps<any>) {\n    return (\n        <DropDownPicker {...properties}\n            style={styles.picker}\n            textStyle={styles.font}\n            labelStyle={styles.font}\n        />\n    )\n}\n\nconst styles = StyleSheet.create({\n    picker: {\n        backgroundColor: 'white',\n        marginBottom: 24,\n        height: 40,\n        paddingHorizontal: 16,\n        borderWidth: 0,\n        borderRadius: 18,\n    },\n    font: {\n        fontSize: 16,\n        fontWeight: 'bold',\n        color: '#123262',\n    }\n})","import { StyleSheet } from \"react-native\";\n\nexport const DiscountStyles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: \"flex-end\",\n        backgroundColor: `rgba(0, 0, 0, 0.8)`,\n    },\n    field: {\n        position: \"absolute\",\n        width: \"100%\",\n        height: \"50%\",\n        alignItems: \"center\",\n        paddingHorizontal: \"5%\",\n        backgroundColor: \"#F0F2F7\",\n        borderTopLeftRadius: 18,\n        borderTopRightRadius: 18,\n        zIndex: 99,\n    },\n    title: {\n        fontSize: 24,\n        fontWeight: \"bold\",\n        color: \"#454545\",\n        marginVertical: 32,\n    },\n});","import { useState, useEffect, useContext, useRef } from \"react\";\nimport {\n  StyleSheet,\n  Modal,\n  ModalProps,\n  View,\n  Text,\n  GestureResponderEvent,\n  Pressable,\n  Keyboard,\n  Animated,\n} from \"react-native\";\nimport { TextInput } from \"../inputs/text-input\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { NavigationParams } from \"../../types/navigation.params\";\nimport { AuthContext } from \"../../contexts/auth.provider\";\nimport { Button } from \"../buttons/button\";\nimport { Picker } from \"../pickers/picker\";\nimport { ItemType } from \"react-native-dropdown-picker\";\nimport { UserBranch } from \"../../models/user.branch.model\";\nimport { DiscountStyles as styles } from \"./discount-styles\";\n\ninterface Properties extends ModalProps {\n  visible?: boolean;\n  dismiss?: (event: GestureResponderEvent) => void | null;\n}\n\nexport function DiscountModal(properties: Properties) {\n  const authContext = useContext(AuthContext);\n  const navigation = useNavigation<NavigationParams>();\n  const [budget, setBudget] = useState(\"\");\n  const [branch, setBranch] = useState(\"\");\n  const [branches, setBranches] = useState<ItemType<UserBranch>[]>();\n  const translation = useRef(new Animated.Value(400)).current;\n  const [open, setOpen] = useState(false);\n  const [disabled, setDisabled] = useState(false);\n\n  useEffect(() => {\n    let data = authContext.user?.branches;\n    if (data) {\n      let array: ItemType<any>[] = [];\n      Object.entries(data).forEach(([key, value]) => {\n        array = [\n          ...array,\n          {\n            value: value.id,\n            label: `${value.id} - ${value.name}`,\n          },\n        ];\n      });\n      setBranches(array);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (budget.length == 6) {\n      Keyboard.dismiss();\n    }\n    if (budget.length == 6 && branch) {\n      setDisabled(false);\n    } else {\n      setDisabled(true);\n    }\n  }, [budget, branch]);\n\n  return (\n    <Modal\n      transparent={true}\n      visible={properties.visible}\n      animationType=\"fade\"\n      onShow={() => {\n        Animated.timing(translation, {\n          toValue: 1,\n          duration: 500,\n          useNativeDriver: true,\n        }).start();\n      }}\n    >\n      <View style={styles.container}>\n        <Pressable\n          onPressIn={() => {\n            translation.setValue(400);\n            setBranch(\"\");\n            setBudget(\"\");\n            setOpen(false);\n          }}\n          onPressOut={properties.dismiss}\n          style={StyleSheet.absoluteFillObject}\n        />\n        <Animated.View\n          style={[{ transform: [{ translateY: translation }] }, styles.field]}\n        >\n          <Text style={styles.title}>Desconto</Text>\n          <TextInput\n            value={budget}\n            onChangeText={setBudget}\n            keyboardType=\"default\"\n            autoCapitalize=\"characters\"\n            placeholder=\"Número do Orçamento\"\n            maxLength={6}\n            placeholderTextColor=\"#1F537E\"\n          />\n          <Picker\n            items={branches!}\n            value={branch}\n            setValue={setBranch}\n            open={open}\n            setOpen={setOpen}\n            placeholder=\"Filiais\"\n          />\n          <Button\n            title=\"CONTINUAR\"\n            onPressIn={() => {\n              translation.setValue(400);\n              setOpen(false);\n              setBranch(\"\");\n              setBudget(\"\");\n              navigation && navigation.navigate(\"Discount\");\n            }}\n            onPressOut={properties.dismiss}\n            disabled={disabled}\n          />\n        </Animated.View>\n      </View>\n    </Modal>\n  );\n}","import { useEffect, useState } from \"react\";\nimport { StyleSheet, View, Text } from \"react-native\";\nimport { Divider } from \"../dividers/divider\";\nimport { MaterialIcons as Icon } from \"@expo/vector-icons\";\nimport { UserLogs } from \"../../models/user.logs.model\";\n\nexport function LogsItem({ data }: { data: UserLogs }) {\n  const [name, setName] = useState<any>(\"\");\n  useEffect(() => {\n    if (data.type == \"DESCONTO_ORCAMENTO\") {\n      setName(\"attach-money\");\n    }\n    if (data.type == \"LIBERACAO_ORCAMENTO\") {\n      setName(\"check-box\");\n    }\n  }, []);\n  return (\n    <View>\n      <View style={styles.container}>\n        <View style={{ flexDirection: \"row\" }}>\n          <Icon\n            testID=\"icon\"\n            name={name}\n            size={28}\n            color=\"#123262\"\n            style={{ alignSelf: \"center\" }}\n          />\n          <View>\n            <Text testID=\"title\" style={styles.text}>\n              {data.title + \" \" + data.id}\n            </Text>\n            <Text testID=\"description\" style={styles.sub}>\n              {data.description}\n            </Text>\n          </View>\n        </View>\n        <Text testID=\"date\" style={styles.sub}>{data.date}</Text>\n      </View>\n      <Divider />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    paddingVertical: 12,\n  },\n  text: {\n    fontSize: 12,\n    fontWeight: \"bold\",\n    color: \"#123262\",\n  },\n  sub: {\n    fontSize: 10,\n    color: \"#8894ac\",\n  },\n});\n","import { FlatList, ListRenderItem } from \"react-native\"\nimport { UserLogs } from \"../../models/user.logs.model\"\nimport { LogsItem } from \"./logs-item\"\n\ninterface Properties {\n    data?: Array<any>\n}\n\nexport function Logs(properties: Properties) {\n    const renderItem: ListRenderItem<UserLogs> = ({ item }) => <LogsItem data={item} />\n\n    return (\n        <FlatList data={properties.data} renderItem={renderItem} />\n    )\n}","import React, { useContext, useState } from \"react\";\nimport { StackScreenProps } from \"@react-navigation/stack\";\nimport { StyleSheet, View, ScrollView } from \"react-native\";\nimport { StackParams } from \"../../types/stack.params\";\nimport { Header } from \"../../components/headers/header\";\nimport { NavigationButton } from \"../../components/buttons/navigation-button\";\nimport { HomeContainer } from \"../../components/containers/home-container\";\nimport { DiscountModal } from \"../../components/modals/discount\";\nimport { Logs } from \"../../components/lists/logs\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { AuthContext } from \"../../contexts/auth.provider\";\nimport { Dialog } from \"../../components/modals/dialog\";\nimport { UserLogs } from \"../../models/user.logs.model\";\n\ninterface Properties extends StackScreenProps<StackParams, \"Home\"> {}\n\nexport default function Home({ navigation }: Properties) {\n  const authContext = useContext(AuthContext);\n  const [data] = useState<UserLogs[]>(authContext.user?.logs!);\n  const [containerTitle] = useState(\"Histórico\");\n  const [containerChild] = useState<React.ReactNode>(<Logs data={data} />);\n  const [discount, setDiscount] = useState(false);\n  const [dialog, setDialog] = useState({ title: \"\", content: \"\" });\n  const [visible, setVisible] = useState(false);\n\n  const NavigationButtonOnPress = () => {\n    if (authContext.company != \"\") {\n      setDiscount(true);\n    } else {\n      Alert(\"Alerta\", \"Você não possui autorização para utilizar esta opção.\");\n    }\n  };\n\n  const Alert = (title: string, content: string) => {\n    setDialog({ title: title, content: content });\n    setVisible(true);\n  };\n\n  return (\n    <View style={styles.container}>\n      <View>\n        <Header returnOption={false} />\n      </View>\n      <ScrollView\n        horizontal={true}\n        showsHorizontalScrollIndicator={false}\n        style={styles.menu}\n      >\n        <NavigationButton\n          icon=\"attach-money\"\n          title=\"Desconto\"\n          onPress={NavigationButtonOnPress}\n        />\n      </ScrollView>\n      <View style={styles.field}>\n        <HomeContainer title={containerTitle}>{containerChild}</HomeContainer>\n      </View>\n      {discount && (\n        <DiscountModal\n          visible={discount}\n          dismiss={() => {\n            setDiscount(false);\n          }}\n        />\n      )}\n      <Dialog\n        title={dialog.title}\n        content={dialog.content}\n        visible={visible}\n        dismiss={() => {\n          setVisible(false);\n        }}\n      />\n      <StatusBar style=\"light\" translucent={false} backgroundColor=\"#212A4D\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"column\",\n    backgroundColor: \"#F0F2F7\",\n  },\n  menu: {\n    flex: 1,\n    marginVertical: \"5%\",\n    marginHorizontal: \"5%\",\n  },\n  field: {\n    flex: 4,\n    flexDirection: \"column\",\n    marginHorizontal: \"5%\",\n  },\n});\n","import { TextInputMask, TextInputMaskProps } from \"react-native-masked-text\"\nimport { InputStyles as styles } from \"./input-styles\";\n\ninterface Properties extends TextInputMaskProps { }\n\nexport function MaskedInput(properties: Properties) {\n    return (\n        <TextInputMask {...properties}\n            includeRawValueInChangeText={true}\n            placeholderTextColor=\"#123262\"\n            style={styles.input} />\n    )\n}","import { useState, useRef } from \"react\";\nimport {\n    StyleSheet,\n    Modal,\n    ModalProps,\n    View,\n    Text,\n    GestureResponderEvent,\n    Pressable,\n    Animated,\n} from \"react-native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { NavigationParams } from \"../../types/navigation.params\";\nimport { MaskedInput } from \"../inputs/masked-input\";\nimport { TextInput } from \"../inputs/text-input\";\nimport { Button } from \"../buttons/button\";\nimport { DiscountStyles as styles } from \"./discount-styles\";\n\ninterface Properties extends ModalProps {\n    visible: boolean;\n    dismiss?: (event: GestureResponderEvent) => void | null;\n}\n\nexport function ApplyDiscountModal(properties: Properties) {\n    const navigation = useNavigation<NavigationParams>();\n    const translation = useRef(new Animated.Value(400)).current;\n    const [percentage, setPercentage] = useState(\"\")\n    const [value, setValue] = useState(\"\")\n\n    const reset = () => {\n        setPercentage(\"\")\n        setValue(\"\")\n        translation.setValue(400);\n    }\n\n    return (\n        <Modal\n            transparent={true}\n            visible={properties.visible}\n            animationType=\"fade\"\n            onShow={() => {\n                Animated.timing(translation, {\n                    toValue: 1,\n                    duration: 500,\n                    useNativeDriver: true,\n                }).start();\n            }}\n        >\n            <View style={styles.container}>\n                <Pressable\n                    onPressIn={reset}\n                    onPressOut={properties.dismiss}\n                    style={StyleSheet.absoluteFillObject} />\n                <Animated.View\n                    style={[\n                        { transform: [{ translateY: translation }] },\n                        styles.field\n                    ]}>\n                    <Text style={styles.title}>Desconto</Text>\n                    <TextInput\n                        value={percentage}\n                        onChangeText={setPercentage}\n                        keyboardType=\"numeric\"\n                        maxLength={2}\n                        placeholder=\"Desconto %\" />\n                    <MaskedInput\n                        value={value}\n                        onChangeText={(maskedText, rawText) => {\n                            setValue(rawText!)\n                        }}\n                        placeholder=\"Desconto Valor\"\n                        type=\"money\"\n                        options={{\n                            precision: 2,\n                            separator: \",\",\n                            delimiter: \".\",\n                            unit: \"R$ \",\n                            suffixUnit: \"\"\n                        }} />\n                    <Button\n                        title=\"CONTINUAR\"\n                        onPressIn={() => {\n                            navigation && navigation.navigate(\"DiscountConfirmation\");\n                            reset();\n                        }}\n                        onPressOut={properties.dismiss} />\n                </Animated.View>\n            </View>\n        </Modal>\n    );\n}","import { StyleSheet } from 'react-native'\n\nexport const DropdownStyles = StyleSheet.create({\n    container: {\n        marginVertical: '1.25%',\n        paddingHorizontal: '5%',\n        paddingVertical: '2.5%',\n        borderTopStartRadius: 9,\n        borderTopEndRadius: 9,\n        justifyContent: 'center',\n        backgroundColor: '#DFE1E6',\n    },\n    area: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n    },\n    children: {\n        marginHorizontal: '5%',\n        paddingHorizontal: '5%',\n        justifyContent: 'center',\n        backgroundColor: 'white',\n    },\n    text: {\n        fontSize: 20,\n    },\n    subText: {\n        fontSize: 13,\n    },\n    item: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        paddingVertical: '1.25%',\n    },\n})","import { useState } from \"react\";\nimport { StyleSheet, View, Text } from \"react-native\";\nimport { PaymentMethod } from \"../../../models/payment-method.model\";\n\nexport function PaymentMethodItem({ data }: { data: PaymentMethod }) {\n    const value: number = +(data.value)\n    const installments: number = +(data.installments)\n    const [installment] = useState(value / installments)\n    return (\n        <View style={styles.container}>\n            <Text style={styles.title}>{data.method}</Text>\n            <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\n                <Text style={styles.description}>{data.installments} x {installment}</Text>\n                <Text style={styles.title}>{data.value}</Text>\n            </View>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: \"#DFE1E6\",\n        borderRadius: 10,\n        padding: 8,\n        marginVertical: 4\n    },\n    title: {\n        fontSize: 14,\n        color: \"#123262\",\n    },\n    description: {\n        fontSize: 10,\n        color: \"silver\",\n    }\n})","import { useEffect, useState } from \"react\";\nimport { FlatList, ListRenderItem, Pressable, Text, View } from \"react-native\";\nimport { DropdownStyles as styles } from \"../dropdown-styles\";\nimport { Feather as Icon } from \"@expo/vector-icons\";\nimport { PaymentMethod } from \"../../../models/payment-method.model\";\nimport { PaymentMethodItem } from \"../../lists/discount/payment-method-item\";\n\ninterface Properties {\n  budget?: number;\n  branch?: string;\n}\n\nexport function PaymentMethodDropdown(properties: Properties) {\n  const [visible, setVisible] = useState(false);\n  const [data, setData] = useState([])\n\n  useEffect(() => { \n    setData([])\n  },[])\n\n  const expand = () => {\n    setVisible((current) => !current);\n  };\n\n  const renderItem: ListRenderItem<PaymentMethod> = ({ item }) => <PaymentMethodItem data={item} />\n\n  return (\n    <View>\n      <Pressable style={styles.container} onPress={expand}>\n        <View style={styles.area}>\n          <Text style={styles.text}>Forma de pagamento</Text>\n          <Icon\n            testID=\"icon\"\n            name={visible === false ? \"chevron-down\" : \"chevron-up\"}\n            size={32} />\n        </View>\n      </Pressable>\n      {visible && (\n        <View style={styles.children}>\n          <FlatList data={data} renderItem={renderItem} />\n        </View>\n      )}\n    </View>\n  );\n}\n","import { StyleSheet, View, Image, Text } from \"react-native\";\nimport { Items } from \"../../../models/items.model\";\n\nexport function ItemsItem({ data }: { data: Items }) {\n    return (\n        <View style={styles.container}>\n            <Image\n                source={{ uri: data.imageUrl }}\n                style={{ maxWidth: 120, maxHeight: 100 }} />\n            <View style={{ marginLeft: 8 }}>\n                <Text style={styles.title}>{data.name}</Text>\n                <Text style={styles.description}>Armazem: {data.stock}</Text>\n                <Text style={styles.description}>Tipo: {data.type}</Text>\n                <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\n                    <Text style={styles.title}>{data.items} x R$ {data.value}</Text>\n                    <Text style={styles.title}>R$ {data.total}</Text>\n                </View>\n            </View>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flexDirection: \"row\",\n        backgroundColor: \"#DFE1E6\",\n        borderRadius: 10,\n        padding: 8,\n        marginVertical: 4\n    },\n    title: {\n        fontSize: 14,\n        color: \"#123262\",\n    },\n    description: {\n        fontSize: 10,\n        color: \"silver\",\n    }\n})","import { useState, useEffect } from \"react\";\nimport { ListRenderItem, Pressable, Text, View } from \"react-native\";\nimport { DropdownStyles as styles } from \"../dropdown-styles\";\nimport { Feather as Icon } from \"@expo/vector-icons\";\nimport { FlatList } from \"react-native-gesture-handler\";\nimport { Items } from \"../../../models/items.model\";\nimport { ItemsItem } from \"../../lists/discount/items-item\";\n\ninterface Properties {\n  budget?: number;\n  branch?: string;\n}\n\nexport function ItemsDropdown(properties: Properties) {\n  const [visible, setVisible] = useState(false);\n  const [data, setData] = useState([])\n\n  useEffect(() => {\n    setData([])\n  }, [])\n\n  const expand = () => {\n    setVisible((current) => !current);\n  };\n\n  const renderItem: ListRenderItem<Items> = ({ item }) => <ItemsItem data={item} />\n\n  return (\n    <View>\n      <Pressable style={styles.container} onPress={expand}>\n        <View style={styles.area}>\n          <Text style={styles.text}>Itens</Text>\n          <Icon\n            testID=\"icon\"\n            name={visible === false ? \"chevron-down\" : \"chevron-up\"}\n            size={32} />\n        </View>\n      </Pressable>\n      {visible && (\n        <View style={styles.children}>\n          <FlatList data={data} renderItem={renderItem} />\n        </View>\n      )}\n    </View>\n  );\n}\n","import { useState } from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { StyleSheet, View, Text } from \"react-native\";\nimport { StackScreenProps } from \"@react-navigation/stack\";\nimport { StackParams } from \"../../types/stack.params\";\nimport { MaterialIcons as Icon } from \"@expo/vector-icons\";\nimport { Button } from \"../../components/buttons/button\";\nimport { ApplyDiscountModal } from \"../../components/modals/apply-discount\";\nimport { PaymentMethodDropdown } from \"../../components/dropdowns/discount/payment-method-dropdown\";\nimport { ItemsDropdown } from \"../../components/dropdowns/discount/items-dropdown\";\n\ninterface Properties\n  extends StackScreenProps<StackParams, \"Discount\"> { }\n\nexport default function Discount({ navigation }: Properties) {\n  const [visible, setVisible] = useState(false)\n  return (\n    <View style={styles.container}>\n      <View style={styles.topField}>\n        <View style={styles.header}>\n          <Icon\n            testID=\"icon\"\n            name=\"keyboard-arrow-left\"\n            size={48}\n            color=\"white\"\n            onPress={() => {\n              navigation && navigation.navigate(\"Home\");\n            }}\n          />\n          <Text style={styles.headerText}>Orçamento #564354</Text>\n        </View>\n        <View style={{ flex: 4, justifyContent: \"space-between\", paddingBottom: 8 }}>\n          <View>\n            <Text style={styles.title}>Vendedor</Text>\n            <Text style={styles.subTitle}>000054 - ANDERSON</Text>\n            <Text style={styles.title}>Cliente</Text>\n            <Text style={styles.subTitle}>119749 - JOSE CARLOS</Text>\n          </View>\n          <View style={styles.budget}>\n            <View style={{ flexDirection: \"row\" }}>\n              <View style={[{ backgroundColor: \"limegreen\" }, styles.box]}>\n                <Text style={styles.headerText}>Normal</Text>\n              </View>\n              <View style={[{ backgroundColor: \"red\" }, styles.box]}>\n                <Text style={styles.headerText}>Proc. PDV</Text>\n              </View>\n            </View>\n            <Text style={{\n              fontSize: 24,\n              fontWeight: \"bold\",\n              color: \"white\",\n            }}>R$ 200,00</Text>\n          </View>\n        </View>\n      </View>\n      <View style={styles.bottomField}>\n        <View style={{ flex: 5, paddingTop: \"2.5%\" }}>\n          <ItemsDropdown />\n          <PaymentMethodDropdown />\n        </View>\n        <View style={{ flex: 1 }}>\n          <Button\n            onPress={() => { setVisible(true) }}\n            title=\"CONTINUAR\" />\n        </View>\n      </View>\n      <ApplyDiscountModal\n        dismiss={() => {\n          setVisible(false)\n        }}\n        visible={visible} />\n      <StatusBar style=\"light\" translucent={false} backgroundColor=\"#212A4D\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"column\",\n    backgroundColor: \"#F0F2F7\",\n  },\n  header: {\n    flex: 1,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  headerText: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    color: \"white\",\n  },\n  topField: {\n    flex: 2,\n    backgroundColor: \"#1F2D5A\",\n  },\n  title: {\n    fontSize: 14,\n    color: \"silver\",\n    paddingHorizontal: \"5%\",\n  },\n  subTitle: {\n    fontSize: 16,\n    color: \"white\",\n    paddingHorizontal: \"5%\",\n    marginBottom: 8,\n  },\n  budget: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    marginHorizontal: \"5%\",\n  },\n  box: {\n    height: 30,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 4,\n    paddingHorizontal: 8,\n    marginRight: 8,\n  },\n  bottomField: {\n    flex: 4,\n    flexDirection: \"column\",\n    marginHorizontal: \"5%\",\n  },\n});\n","import { StyleSheet } from \"react-native\";\nimport { SwipeButton as RNExpoSwipeButton } from 'react-native-expo-swipe-button';\nimport { MaterialIcons as Icon } from '@expo/vector-icons';\n\ninterface Properties {\n    onComplete: () => void\n    title: string\n    underlayTitle: string\n}\n\nexport function SwipeButton(properties: Properties) {\n    return (\n        <RNExpoSwipeButton\n            Icon={\n                <Icon\n                    name=\"keyboard-arrow-right\"\n                    size={42}\n                    color=\"white\" />\n            }\n            onComplete={properties.onComplete}\n            title={properties.title}\n            titleStyle={styles.title}\n            underlayTitle={properties.underlayTitle}\n            underlayTitleStyle={styles.title}\n            underlayStyle={{ backgroundColor: \"#212A4D\" }}\n            borderRadius={180}\n            containerStyle={{ backgroundColor: '#1F2D5A', borderRadius: 180 }}\n            circleBackgroundColor=\"#163E60\"\n            circleSize={58}\n            iconContainerStyle={{ paddingLeft: 16 }}\n        />\n    )\n}\n\nconst styles = StyleSheet.create({\n    title: {\n        fontSize: 16,\n        fontWeight: \"bold\",\n        color: \"white\"\n    }\n})","import { StatusBar } from \"expo-status-bar\";\nimport { StyleSheet, View, ScrollView, Text } from \"react-native\";\nimport { StackScreenProps } from \"@react-navigation/stack\";\nimport { StackParams } from \"../../../types/stack.params\";\nimport { MaterialIcons as Icon } from \"@expo/vector-icons\";\nimport { SwipeButton } from \"../../../components/buttons/swipe-button\";\n\ninterface Properties\n  extends StackScreenProps<StackParams, \"DiscountConfirmation\"> { }\n\nexport default function DiscountConfirmation({ navigation }: Properties) {\n  return (\n    <ScrollView contentContainerStyle={styles.container} scrollEnabled={false}>\n      <View style={styles.topField}>\n        <View style={styles.header}>\n          <Icon\n            testID=\"icon\"\n            name=\"keyboard-arrow-left\"\n            size={48}\n            color=\"white\"\n            onPress={() => {\n              navigation && navigation.navigate(\"Discount\");\n            }}\n          />\n          <Text style={styles.headerText}>Desconto</Text>\n        </View>\n        <Text style={styles.client}>DEUZA MARIA CRISTINA</Text>\n        <Text style={styles.budget}>Orçamento #564354</Text>\n      </View>\n      <View style={styles.bottomField}>\n        <View>\n          <Text style={styles.result}>Normal</Text>\n          <Text style={styles.description}>Tipo do Orçamento</Text>\n        </View>\n        <View>\n          <Text style={styles.result}>ANDERSON JORGE</Text>\n          <Text style={styles.description}>Vendedor</Text>\n        </View>\n        <View>\n          <Text style={styles.result}>Total R$ 233,88</Text>\n          <Text style={styles.description}>\n            Pagamento\n            <Text style={{ fontWeight: \"bold\" }}>em dinheiro</Text>\n          </Text>\n        </View>\n        <SwipeButton\n          onComplete={() => { }}\n          title=\"EFETUAR DESCONTO\"\n          underlayTitle=\"CONFIRMAR DESCONTO\"\n        />\n      </View>\n      <StatusBar style=\"light\" translucent={false} backgroundColor=\"#212A4D\" />\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"column\",\n    backgroundColor: \"#F0F2F7\",\n  },\n  header: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  headerText: {\n    fontSize: 16,\n    color: \"white\",\n  },\n  topField: {\n    flex: 2,\n    backgroundColor: \"#1F2D5A\",\n  },\n  client: {\n    fontSize: 28,\n    fontWeight: \"bold\",\n    color: \"white\",\n    paddingHorizontal: \"5%\",\n    paddingTop: 52,\n  },\n  budget: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    color: \"white\",\n    paddingHorizontal: \"5%\",\n    paddingTop: 64,\n  },\n  bottomField: {\n    flex: 4,\n    flexDirection: \"column\",\n    marginHorizontal: \"5%\",\n    justifyContent: \"space-around\",\n  },\n  result: {\n    fontSize: 28,\n    fontWeight: \"bold\",\n    color: \"#454545\",\n  },\n  description: {\n    fontSize: 16,\n    color: \"#454545\",\n  },\n});\n","import { StackParams } from \"../types/stack.params\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport Home from \"../pages/Home\";\nimport Discount from \"../pages/Discount\";\nimport DiscountConfirmation from \"../pages/Discount/Confirmation\";\n\nexport default function AppRoutes() {\n  const Stack = createStackNavigator<StackParams>();\n  return (\n    <Stack.Navigator screenOptions={{ headerShown: false }}>\n      <Stack.Screen\n        name=\"Home\"\n        component={Home} />\n      <Stack.Screen\n        name=\"Discount\"\n        component={Discount} />\n      <Stack.Screen\n        name=\"DiscountConfirmation\"\n        component={DiscountConfirmation} />\n    </Stack.Navigator >\n  )\n}","import { TextInput, TextInputProps } from \"react-native\";\nimport { InputStyles as styles } from \"./input-styles\";\n\nexport function EmailInput(properties: TextInputProps) {\n    return (\n        <TextInput {...properties}\n            textContentType=\"emailAddress\"\n            keyboardType=\"email-address\"\n            autoCapitalize=\"none\"\n            maxFontSizeMultiplier={14}\n            placeholder=\"E-mail\"\n            placeholderTextColor=\"#1F537E\"\n            style={styles.input} />\n    )\n}","import { useState, useContext } from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport { StackScreenProps } from \"@react-navigation/stack\";\nimport { StackParams } from \"../../types/stack.params\";\nimport { Button } from \"../../components/buttons/button\";\nimport { Dialog } from \"../../components/modals/dialog\";\nimport { AuthContext } from \"../../contexts/auth.provider\";\nimport { EmailInput } from \"../../components/inputs/email-input\";\nimport { StatusBar } from \"expo-status-bar\";\n\ninterface Properties\n  extends StackScreenProps<StackParams, \"PasswordRecovery\"> {}\n\nexport default function PasswordRecovery({ navigation }: Properties) {\n  const authContext = useContext(AuthContext);\n  const [email, setEmail] = useState<string>(\"\");\n  const [visible, setVisible] = useState<boolean>(false);\n  const defaultDialog = {\n    title: \"Recuperação de senha\",\n    content:\n      \"Em alguns instantes uma mensagem de e-mail chegará em sua caixa de entrada com as instruções para redefinição da sua senha.\",\n  };\n  const [dialog, setDialog] = useState(defaultDialog);\n\n  const handleRecoverPassword = () => {\n    if (email != \"\") {\n      authContext.recoverPassword(email);\n      navigation && navigation.navigate(\"SignIn\");\n    } else {\n      Alert(\n        \"Dado mandatório\",\n        \"Por favor, forneça o seu e-mail para recuperar sua senha.\"\n      );\n    }\n    setVisible(false);\n    setDialog(defaultDialog);\n  };\n\n  const Alert = (title: string, content: string) => {\n    setDialog({ title: title, content: content });\n    setVisible(true);\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={{ marginHorizontal: \"10%\" }}>\n        <View>\n          <EmailInput value={email} onChangeText={setEmail} />\n          <Button title=\"ENVIAR\" onPress={() => setVisible(true)} />\n        </View>\n      </View>\n      <Dialog\n        title={dialog.title}\n        content={dialog.content}\n        visible={visible}\n        dismiss={handleRecoverPassword}\n      />\n      <StatusBar style=\"light\" translucent={false} backgroundColor=\"silver\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    backgroundColor: \"#F0F2F7\",\n  },\n  title: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    color: \"#454545\",\n  },\n});\n","import { useContext, useState } from \"react\";\nimport { StyleSheet, View, Image, Text } from \"react-native\";\nimport { StackScreenProps } from \"@react-navigation/stack\";\nimport { AuthContext } from \"../../contexts/auth.provider\";\nimport { StackParams } from \"../../types/stack.params\";\nimport { Button } from \"../../components/buttons/button\";\nimport { CommandLink } from \"../../components/buttons/command-link\";\nimport { EmailInput } from \"../../components/inputs/email-input\";\nimport { PasswordInput } from \"../../components/inputs/password-input\";\nimport { StatusBar } from \"expo-status-bar\";\n\ninterface Properties extends StackScreenProps<StackParams, \"SignIn\"> {}\n\nexport default function SignIn({ navigation }: Properties) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const authContext = useContext(AuthContext);\n\n  const handleSingIn = () => {\n    authContext.signIn(email, password);\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={{ marginHorizontal: \"10%\" }}>\n        <View style={{ marginBottom: 32 }}>\n          <Image\n            source={require(\"../../../assets/adaptive-icon.png\")}\n            style={{ width: 64, height: 64 }}\n          />\n          <Text style={styles.title}>Olá,</Text>\n          <Text style={styles.title}>seja bem-vindo(a).</Text>\n        </View>\n        <View style={{ marginBottom: 40 }}>\n          <EmailInput value={email} onChangeText={setEmail} />\n          <PasswordInput value={password} onChangeText={setPassword} />\n          <Button onPress={handleSingIn} title=\"ENTRAR\" />\n        </View>\n        <CommandLink\n          testID=\"link-cadastrar\"\n          onPress={() => {\n            navigation && navigation.navigate(\"SignUp\");\n          }}\n          title=\"Cadastre-se\"\n        />\n        <CommandLink\n          testID=\"link-recuperar-senha\"\n          onPress={() => {\n            navigation && navigation.navigate(\"PasswordRecovery\");\n          }}\n          title=\"Esqueceu sua senha?\"\n        />\n      </View>\n      <StatusBar style=\"light\" translucent={false} backgroundColor=\"silver\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#F0F2F7\",\n    justifyContent: \"center\",\n  },\n  title: {\n    fontSize: 28,\n    fontWeight: \"bold\",\n    width: 300,\n    color: \"#1F537E\",\n  },\n});\n","import { useContext, useState } from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport { Button } from \"../../components/buttons/button\";\nimport { Dialog } from \"../../components/modals/dialog\";\nimport { StackScreenProps } from \"@react-navigation/stack\";\nimport { StackParams } from \"../../types/stack.params\";\nimport { AuthContext } from \"../../contexts/auth.provider\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { Portrait } from \"../../components/portrait/portrait\";\nimport { EmailInput } from \"../../components/inputs/email-input\";\nimport { PasswordInput } from \"../../components/inputs/password-input\";\nimport { FullNameInput } from \"../../components/inputs/fullname-input\";\nimport { StatusBar } from \"expo-status-bar\";\n\ninterface Properties extends StackScreenProps<StackParams, \"SignUp\"> {}\n\nexport default function SignUp({ navigation }: Properties) {\n  const [fullName, setFullName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [visible, setVisible] = useState(false);\n  const authContext = useContext(AuthContext);\n\n  const [portrait, setPortrait] = useState(\"\");\n  const pickImage = async () => {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      allowsEditing: true,\n      aspect: [1, 1],\n      quality: 0.1,\n    });\n\n    if (!result.canceled) {\n      setPortrait(result.assets[0].uri);\n    }\n  };\n\n  const handleSignUp = () => {\n    if (email == \"\" || password == \"\" || fullName == \"\" || portrait == \"\") {\n      alert(\"Por favor, preencher todos os campos\");\n    } else {\n      setVisible(true);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={{ marginHorizontal: \"10%\" }}>\n        <View>\n          <Portrait source={portrait} onPress={pickImage} />\n          <FullNameInput\n            value={fullName}\n            onChangeText={setFullName}\n            maxLength={20}\n          />\n          <EmailInput value={email} onChangeText={setEmail} />\n          <PasswordInput value={password} onChangeText={setPassword} />\n          <Button testID=\"continuar\" onPress={handleSignUp} title=\"CONTINUAR\" />\n        </View>\n      </View>\n      <Dialog\n        title=\"Verificação de e-mail\"\n        content={\n          \"Aguarde. Um e-mail de verificação foi enviado para sua caixa de entrada. Após a verificação, tente efetuar acesso.\"\n        }\n        visible={visible}\n        dismiss={() => {\n          setVisible(false);\n          authContext.signUp(email, password, fullName, portrait);\n          navigation && navigation.navigate(\"SignIn\");\n        }}\n      />\n      <StatusBar style=\"light\" translucent={false} backgroundColor=\"silver\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    backgroundColor: \"#F0F2F7\",\n  },\n  title: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    color: \"#454545\",\n  },\n});\n","import { createStackNavigator } from \"@react-navigation/stack\";\nimport PasswordRecovery from \"../pages/PasswordRecovery\";\nimport SignIn from \"../pages/SignIn\";\nimport SignUp from \"../pages/SignUp\";\nimport { StackParams } from \"../types/stack.params\";\n\nexport default function AuthRoutes() {\n  const Stack = createStackNavigator<StackParams>();\n  return (\n    <Stack.Navigator>\n      <Stack.Screen\n        name=\"SignIn\"\n        component={SignIn}\n        options={{\n          title: '',\n          headerShown: false,\n        }} />\n      <Stack.Screen\n        name=\"SignUp\"\n        component={SignUp}\n        options={{\n          title: 'Seus dados',\n          headerTransparent: true\n        }} />\n      <Stack.Screen\n        name=\"PasswordRecovery\"\n        component={PasswordRecovery}\n        options={{\n          title: 'Recuperação de senha',\n          headerTransparent: true\n        }} />\n    </Stack.Navigator>\n  )\n}","import { useContext } from \"react\";\nimport { ActivityIndicator, SafeAreaView } from \"react-native\";\nimport { AuthContext } from \"../contexts/auth.provider\";\nimport AppRoutes from \"./app.routes\";\nimport AuthRoutes from \"./auth.routes\";\n\nexport default function Routes() {\n  const authContext = useContext(AuthContext);\n  if (authContext.loading) {\n    return (\n      <SafeAreaView style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <ActivityIndicator size={128} color=\"white\" />\n      </SafeAreaView>\n    )\n  } else {\n    return (authContext.user && authContext.user.verified ? <AppRoutes /> : <AuthRoutes />)\n  }\n}","import { StatusBar } from \"expo-status-bar\";\nimport { StyleSheet, SafeAreaView } from \"react-native\";\nimport \"react-native-gesture-handler\";\nimport AuthProvider from \"./src/contexts/auth.provider\";\nimport Routes from \"./src/routes\";\nimport { NavigationContainer } from \"@react-navigation/native\";\n\nexport default function App() {\n  return (\n    <SafeAreaView style={styles.container}>\n      <NavigationContainer>\n        <AuthProvider>\n          <Routes />\n          <StatusBar style=\"light\" translucent={false} />\n        </AuthProvider>\n      </NavigationContainer>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#212A4D\",\n  },\n})","module.exports = __webpack_public_path__ + \"static/media/adaptive-icon.9c43d51e.png\";","import firebase from \"firebase/compat/app\";\nimport \"firebase/compat/auth\";\nimport \"firebase/compat/firestore\";\nimport \"firebase/compat/database\";\nimport \"firebase/compat/storage\";\nimport { initializeAuth } from \"firebase/auth\";\nimport { getReactNativePersistence } from \"firebase/auth/react-native\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.API_KEY,\n  authDomain: process.env.AUTH_DOMAIN,\n  projectId: process.env.PROJECT_ID,\n  storageBucket: process.env.STORAGE_BUCKET,\n  messagingSenderId: process.env.MESSAGING_SENDER_ID,\n  appId: process.env.APP_ID,\n  measurementId: process.env.MEASUREMENT_ID,\n  databaseURL: process.env.DATABASE_URL,\n};\n\nexport const fireApp = firebase.initializeApp(firebaseConfig);\n\ninitializeAuth(fireApp, {\n  persistence: getReactNativePersistence(AsyncStorage),\n});\n\nexport const firebaseAuth = fireApp.auth();\n\nexport const firestore = fireApp.firestore();\n\nexport const realtime = fireApp.database();\n\nexport const storage = fireApp.storage();\n\nexport default fireApp;\n"],"sourceRoot":""}